{
  "contractName": "Synaps",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenSpaceTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isRep",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenTimeTracker",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transferable",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenName",
          "type": "string"
        },
        {
          "name": "_tokenSym",
          "type": "string"
        },
        {
          "name": "_isTransferable",
          "type": "bool"
        },
        {
          "name": "_isRep",
          "type": "bool"
        },
        {
          "name": "_DAOcreator",
          "type": "address"
        },
        {
          "name": "_maxSupply",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "_Mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "_Burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getRelativePosition",
      "outputs": [
        {
          "name": "time",
          "type": "uint256"
        },
        {
          "name": "space",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.3+commit.10d17f24\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_tokenSym\",\"type\":\"string\"},{\"name\":\"_isTransferable\",\"type\":\"bool\"},{\"name\":\"_isRep\",\"type\":\"bool\"},{\"name\":\"_DAOcreator\",\"type\":\"address\"},{\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenSpaceTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isRep\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_Mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenTimeTracker\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getRelativePosition\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"space\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_Burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"_Burn(address,uint256)\":{\"details\":\"this function will fail if called by anyone other than the owner\",\"params\":{\"_amount\":\"is the amount of tokens being burnt*\",\"_from\":\"is the address the tokens are being burnt from\"}},\"_Mint(address,uint256)\":{\"details\":\"this function will fail if called by anyone who isnt the contract owner\",\"params\":{\"_amount\":\"is the amount of tokens being minted*\",\"_to\":\"is the address tokens are being minted to\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRelativePosition(address)\":{\"details\":\"this is needed to ensure on person cant vote multiple times by transfering his rep to seperate accounts\",\"params\":{\"_account\":\"is the account whos position is being calculated*\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"initialize(string,string,bool,bool,address,uint256)\":{\"details\":\"this function mints one token to the DAO creator so that they can install neurons on the DAO after its creationif _DAOcreator is equal to the DAO(the msg.sender) and the token is not being used as a rep token then the constructor will not mint a first token\",\"params\":{\"_DAOcreator\":\"is the address of the person who created the DAO that is creating this token.\",\"_isRep\":\"is a bool representing whether or not this token will be used as a DAO repToken\",\"_isTransferable\":\"is a bool representing whether of not this token is transferable\",\"_maxSupply\":\"is the maximum supply this synaps will be capped at(uncapped == 0)*\",\"_tokenName\":\"is the name of the token\",\"_tokenSym\":\"is the symbol of the token\"}},\"initialize(string,string,uint8)\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"this override function is used to check if a token allows for transfers\",\"params\":{\"amount\":\"is the amount of token being transfered\",\"recipient\":\"is the address the tokens are being transfered to\"},\"return\":\"is a bool representing whether or not the transfer was successful*\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"_Burn(address,uint256)\":{\"notice\":\"_Burn allows the owner of this token contract to burn tokens from an account\"},\"_Mint(address,uint256)\":{\"notice\":\"_Mint allows the owner of this token contract to mint new tokens\"},\"getRelativePosition(address)\":{\"notice\":\"getRelativePosition is used by the DAO to determine the voting status of an account in DAO's where the rep is transferable.\"},\"initialize(string,string,bool,bool,address,uint256)\":{\"notice\":\"the constructor function is fired only once during contract creation and is used to set up the ZDAO rep token\"},\"transfer(address,uint256)\":{\"notice\":\"transfer is an override function for the standard ERC20 transfer function\"}},\"notice\":\"The Synaps is designed to be a flexible ERC20 token that can be used by a ZDAO in multiple ways.*\"}},\"settings\":{\"compilationTarget\":{\"/home/stan36/repos/zer0/ZDAO/contracts/Cortex/Synaps.sol\":\"Synaps\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/home/stan36/repos/zer0/ZDAO/contracts/Cortex/Synaps.sol\":{\"keccak256\":\"0x47f6ec9d28ceee56f736ad9024fe85fb53a57e2e5b191131891bc0196ec81fa9\",\"urls\":[\"bzzr://cb3b9f3d9d8fc05b1951adfde0302b42023e34d06e4a56f1ea65eb72baffdf59\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzzr://5cddbf3b74b775a8670757a6b8e108dac17dac20253f35f4c729e9cb6bea4ed3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzzr://b4c855b32d75f2a4969bfbd530b6934b69f12f28584b3746967e1ca64e024bd9\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x1eee490bb6b1751e8d39e2670fa0d04dd2e8b7af6da33e1fb4c1593e771b56fb\",\"urls\":[\"bzzr://353641d4df43022f4c0fabe991ff64d95033a850333fa10151a48ec51ea15d0a\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzzr://e52d3aae99e2faee616840b10037346e8fe91e72a457784050605cf9e130abb9\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzzr://f75d88b16fe25a9e19b3512691c496e2bb6d8451bc9a636196c4e17ca9b40201\"]}},\"version\":1}",
  "bytecode": "0x6080604052611928806100136000396000f3fe608060405234801561001057600080fd5b506004361061018b576000357c01000000000000000000000000000000000000000000000000000000009004806384612324116100eb57806396615aa3116100a457806396615aa31461068f578063a457c2d7146106bb578063a9059cbb146106e7578063c4d66de814610713578063d5abeb0114610739578063dd62ed3e14610741578063f2fde38b1461076f5761018b565b806384612324146105ee5780638da5cb5b146106145780638f32d59b146106385780638f50c3a21461064057806392ff0d311461067f57806395d89b41146106875761018b565b8063313ce56711610148578063313ce5671461051c578063395093511461053a5780636fcc7d571461056657806370a082311461058c578063715018a6146105b2578063782f085d146105ba5780637d21ce4d146105c25761018b565b806306fdde03146101905780630898d3851461020d578063095ea7b31461035a5780631624f6c61461039a57806318160ddd146104cc57806323b872dd146104e6575b600080fd5b610198610795565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d25781810151838201526020016101ba565b50505050905090810190601f1680156101ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610358600480360360c081101561022357600080fd5b81019060208101813564010000000081111561023e57600080fd5b82018360208201111561025057600080fd5b8035906020019184600183028401116401000000008311171561027257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102c557600080fd5b8201836020820111156102d757600080fd5b803590602001918460018302840111640100000000831117156102f957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050508035151591506020810135151590600160a060020a03604082013516906060013561082c565b005b6103866004803603604081101561037057600080fd5b50600160a060020a03813516906020013561092e565b604080519115158252519081900360200190f35b610358600480360360608110156103b057600080fd5b8101906020810181356401000000008111156103cb57600080fd5b8201836020820111156103dd57600080fd5b803590602001918460018302840111640100000000831117156103ff57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561045257600080fd5b82018360208201111561046457600080fd5b8035906020019184600183028401116401000000008311171561048657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff16915061094c9050565b6104d4610a2d565b60408051918252519081900360200190f35b610386600480360360608110156104fc57600080fd5b50600160a060020a03813581169160208101359091169060400135610a33565b610524610ac1565b6040805160ff9092168252519081900360200190f35b6103866004803603604081101561055057600080fd5b50600160a060020a038135169060200135610aca565b6104d46004803603602081101561057c57600080fd5b5035600160a060020a0316610b1e565b6104d4600480360360208110156105a257600080fd5b5035600160a060020a0316610b30565b610358610b4b565b610386610bdc565b610358600480360360408110156105d857600080fd5b50600160a060020a038135169060200135610bea565b6104d46004803603602081101561060457600080fd5b5035600160a060020a0316610cc9565b61061c610cdb565b60408051600160a060020a039092168252519081900360200190f35b610386610cea565b6106666004803603602081101561065657600080fd5b5035600160a060020a0316610d10565b6040805192835260208301919091528051918290030190f35b610386610d38565b610198610d41565b610358600480360360408110156106a557600080fd5b50600160a060020a038135169060200135610da2565b610386600480360360408110156106d157600080fd5b50600160a060020a038135169060200135610e01565b610386600480360360408110156106fd57600080fd5b50600160a060020a038135169060200135610e70565b6103586004803603602081101561072957600080fd5b5035600160a060020a0316610ea1565b6104d4610f92565b6104d46004803603604081101561075757600080fd5b50600160a060020a0381358116916020013516610f98565b6103586004803603602081101561078557600080fd5b5035600160a060020a0316610fc3565b60688054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108215780601f106107f657610100808354040283529160200191610821565b820191906000526020600020905b81548152906001019060200180831161080457829003601f168201915b505050505090505b90565b600054610100900460ff1680610845575061084561101b565b80610853575060005460ff16155b15156108935760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611820602e913960400191505060405180910390fd5b600054610100900460ff161580156108be576000805460ff1961ff0019909116610100171660011790555b6108ca8787601261094c565b60d1805460ff19168615151761ff0019166101008615159081029190911790915560d0839055600114156109135761090a83670de0b6b3a7640000611021565b61091383611106565b8015610925576000805461ff00191690555b50505050505050565b600061094261093b61114a565b848461114e565b5060015b92915050565b600054610100900460ff1680610965575061096561101b565b80610973575060005460ff16155b15156109b35760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611820602e913960400191505060405180910390fd5b600054610100900460ff161580156109de576000805460ff1961ff0019909116610100171660011790555b83516109f190606890602087019061166c565b508251610a0590606990602086019061166c565b50606a805460ff191660ff84161790558015610a27576000805461ff00191690555b50505050565b60355490565b6000610a40848484611244565b610ab784610a4c61114a565b610ab285606060405190810160405280602881526020016117b860289139600160a060020a038a16600090815260346020526040812090610a8b61114a565b600160a060020a03168152602081019190915260400160002054919063ffffffff61139b16565b61114e565b5060019392505050565b606a5460ff1690565b6000610942610ad761114a565b84610ab28560346000610ae861114a565b600160a060020a03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61143516565b60d36020526000908152604090205481565b600160a060020a031660009081526033602052604090205490565b610b53610cea565b1515610b97576040805160e560020a62461bcd02815260206004820181905260248201526000805160206117e0833981519152604482015290519081900360640190fd5b609d54604051600091600160a060020a031690600080516020611800833981519152908390a3609d805473ffffffffffffffffffffffffffffffffffffffff19169055565b60d154610100900460ff1681565b610bf2610cea565b1515610c36576040805160e560020a62461bcd02815260206004820181905260248201526000805160206117e0833981519152604482015290519081900360640190fd5b600060d0541115610cb25760d054610c5c82610c50610a2d565b9063ffffffff61143516565b1115610cb2576040805160e560020a62461bcd02815260206004820152601e60248201527f4d617820746f74616c20737570706c79206c696d697420726561636865640000604482015290519081900360640190fd5b610cbb82611106565b610cc58282611021565b5050565b60d26020526000908152604090205481565b609d54600160a060020a031690565b609d54600090600160a060020a0316610d0161114a565b600160a060020a031614905090565b600160a060020a0316600090815260d2602090815260408083205460d3909252909120549091565b60d15460ff1681565b60698054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108215780601f106107f657610100808354040283529160200191610821565b610daa610cea565b1515610dee576040805160e560020a62461bcd02815260206004820181905260248201526000805160206117e0833981519152604482015290519081900360640190fd5b610df782611106565b610cc58282611499565b6000610942610e0e61114a565b84610ab285606060405190810160405280602581526020016118d86025913960346000610e3961114a565b600160a060020a03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61139b16565b60d15460009060ff161515610e8757506000610946565b610e9083611106565b610e9a8383610e70565b5092915050565b600054610100900460ff1680610eba5750610eba61101b565b80610ec8575060005460ff16155b1515610f085760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611820602e913960400191505060405180910390fd5b600054610100900460ff16158015610f33576000805460ff1961ff0019909116610100171660011790555b609d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038481169190911791829055604051911690600090600080516020611800833981519152908290a38015610cc5576000805461ff00191690555050565b60d05481565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b610fcb610cea565b151561100f576040805160e560020a62461bcd02815260206004820181905260248201526000805160206117e0833981519152604482015290519081900360640190fd5b61101881611589565b50565b303b1590565b600160a060020a0382161515611081576040805160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b603554611094908263ffffffff61143516565b603555600160a060020a0382166000908152603360205260409020546110c0908263ffffffff61143516565b600160a060020a038316600081815260336020908152604080832094909455835185815293519293919260008051602061184e8339815191529281900390910190a35050565b600160a060020a038116600090815260d26020526040812042905561112a82610b30565b600160a060020a03909216600090815260d3602052604090209190915550565b3390565b600160a060020a03831615156111985760405160e560020a62461bcd0281526004018080602001828103825260248152602001806118b46024913960400191505060405180910390fd5b600160a060020a03821615156111e25760405160e560020a62461bcd0281526004018080602001828103825260228152602001806117706022913960400191505060405180910390fd5b600160a060020a03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038316151561128e5760405160e560020a62461bcd02815260040180806020018281038252602581526020018061188f6025913960400191505060405180910390fd5b600160a060020a03821615156112d85760405160e560020a62461bcd0281526004018080602001828103825260238152602001806117056023913960400191505060405180910390fd5b61131c816060604051908101604052806026815260200161179260269139600160a060020a038616600090815260336020526040902054919063ffffffff61139b16565b600160a060020a038085166000908152603360205260408082209390935590841681522054611351908263ffffffff61143516565b600160a060020a03808416600081815260336020908152604091829020949094558051858152905191939287169260008051602061184e83398151915292918290030190a3505050565b6000818484111561142d5760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113f25781810151838201526020016113da565b50505050905090810190601f16801561141f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015611492576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a03821615156114e35760405160e560020a62461bcd02815260040180806020018281038252602181526020018061186e6021913960400191505060405180910390fd5b611527816060604051908101604052806022815260200161172860229139600160a060020a038516600090815260336020526040902054919063ffffffff61139b16565b600160a060020a038316600090815260336020526040902055603554611553908263ffffffff61162a16565b603555604080518281529051600091600160a060020a0385169160008051602061184e8339815191529181900360200190a35050565b600160a060020a03811615156115d35760405160e560020a62461bcd02815260040180806020018281038252602681526020018061174a6026913960400191505060405180910390fd5b609d54604051600160a060020a0380841692169060008051602061180083398151915290600090a3609d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600061149283836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061139b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116ad57805160ff19168380011785556116da565b828001600101855582156116da579182015b828111156116da5782518255916020019190600101906116bf565b506116e69291506116ea565b5090565b61082991905b808211156116e657600081556001016116f056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa165627a7a723058206aed496eb039dc6747a1beb8cc5060217f10302c42e1e2af9414db8eecbe221b0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018b576000357c01000000000000000000000000000000000000000000000000000000009004806384612324116100eb57806396615aa3116100a457806396615aa31461068f578063a457c2d7146106bb578063a9059cbb146106e7578063c4d66de814610713578063d5abeb0114610739578063dd62ed3e14610741578063f2fde38b1461076f5761018b565b806384612324146105ee5780638da5cb5b146106145780638f32d59b146106385780638f50c3a21461064057806392ff0d311461067f57806395d89b41146106875761018b565b8063313ce56711610148578063313ce5671461051c578063395093511461053a5780636fcc7d571461056657806370a082311461058c578063715018a6146105b2578063782f085d146105ba5780637d21ce4d146105c25761018b565b806306fdde03146101905780630898d3851461020d578063095ea7b31461035a5780631624f6c61461039a57806318160ddd146104cc57806323b872dd146104e6575b600080fd5b610198610795565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d25781810151838201526020016101ba565b50505050905090810190601f1680156101ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610358600480360360c081101561022357600080fd5b81019060208101813564010000000081111561023e57600080fd5b82018360208201111561025057600080fd5b8035906020019184600183028401116401000000008311171561027257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102c557600080fd5b8201836020820111156102d757600080fd5b803590602001918460018302840111640100000000831117156102f957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050508035151591506020810135151590600160a060020a03604082013516906060013561082c565b005b6103866004803603604081101561037057600080fd5b50600160a060020a03813516906020013561092e565b604080519115158252519081900360200190f35b610358600480360360608110156103b057600080fd5b8101906020810181356401000000008111156103cb57600080fd5b8201836020820111156103dd57600080fd5b803590602001918460018302840111640100000000831117156103ff57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561045257600080fd5b82018360208201111561046457600080fd5b8035906020019184600183028401116401000000008311171561048657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050903560ff16915061094c9050565b6104d4610a2d565b60408051918252519081900360200190f35b610386600480360360608110156104fc57600080fd5b50600160a060020a03813581169160208101359091169060400135610a33565b610524610ac1565b6040805160ff9092168252519081900360200190f35b6103866004803603604081101561055057600080fd5b50600160a060020a038135169060200135610aca565b6104d46004803603602081101561057c57600080fd5b5035600160a060020a0316610b1e565b6104d4600480360360208110156105a257600080fd5b5035600160a060020a0316610b30565b610358610b4b565b610386610bdc565b610358600480360360408110156105d857600080fd5b50600160a060020a038135169060200135610bea565b6104d46004803603602081101561060457600080fd5b5035600160a060020a0316610cc9565b61061c610cdb565b60408051600160a060020a039092168252519081900360200190f35b610386610cea565b6106666004803603602081101561065657600080fd5b5035600160a060020a0316610d10565b6040805192835260208301919091528051918290030190f35b610386610d38565b610198610d41565b610358600480360360408110156106a557600080fd5b50600160a060020a038135169060200135610da2565b610386600480360360408110156106d157600080fd5b50600160a060020a038135169060200135610e01565b610386600480360360408110156106fd57600080fd5b50600160a060020a038135169060200135610e70565b6103586004803603602081101561072957600080fd5b5035600160a060020a0316610ea1565b6104d4610f92565b6104d46004803603604081101561075757600080fd5b50600160a060020a0381358116916020013516610f98565b6103586004803603602081101561078557600080fd5b5035600160a060020a0316610fc3565b60688054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108215780601f106107f657610100808354040283529160200191610821565b820191906000526020600020905b81548152906001019060200180831161080457829003601f168201915b505050505090505b90565b600054610100900460ff1680610845575061084561101b565b80610853575060005460ff16155b15156108935760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611820602e913960400191505060405180910390fd5b600054610100900460ff161580156108be576000805460ff1961ff0019909116610100171660011790555b6108ca8787601261094c565b60d1805460ff19168615151761ff0019166101008615159081029190911790915560d0839055600114156109135761090a83670de0b6b3a7640000611021565b61091383611106565b8015610925576000805461ff00191690555b50505050505050565b600061094261093b61114a565b848461114e565b5060015b92915050565b600054610100900460ff1680610965575061096561101b565b80610973575060005460ff16155b15156109b35760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611820602e913960400191505060405180910390fd5b600054610100900460ff161580156109de576000805460ff1961ff0019909116610100171660011790555b83516109f190606890602087019061166c565b508251610a0590606990602086019061166c565b50606a805460ff191660ff84161790558015610a27576000805461ff00191690555b50505050565b60355490565b6000610a40848484611244565b610ab784610a4c61114a565b610ab285606060405190810160405280602881526020016117b860289139600160a060020a038a16600090815260346020526040812090610a8b61114a565b600160a060020a03168152602081019190915260400160002054919063ffffffff61139b16565b61114e565b5060019392505050565b606a5460ff1690565b6000610942610ad761114a565b84610ab28560346000610ae861114a565b600160a060020a03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61143516565b60d36020526000908152604090205481565b600160a060020a031660009081526033602052604090205490565b610b53610cea565b1515610b97576040805160e560020a62461bcd02815260206004820181905260248201526000805160206117e0833981519152604482015290519081900360640190fd5b609d54604051600091600160a060020a031690600080516020611800833981519152908390a3609d805473ffffffffffffffffffffffffffffffffffffffff19169055565b60d154610100900460ff1681565b610bf2610cea565b1515610c36576040805160e560020a62461bcd02815260206004820181905260248201526000805160206117e0833981519152604482015290519081900360640190fd5b600060d0541115610cb25760d054610c5c82610c50610a2d565b9063ffffffff61143516565b1115610cb2576040805160e560020a62461bcd02815260206004820152601e60248201527f4d617820746f74616c20737570706c79206c696d697420726561636865640000604482015290519081900360640190fd5b610cbb82611106565b610cc58282611021565b5050565b60d26020526000908152604090205481565b609d54600160a060020a031690565b609d54600090600160a060020a0316610d0161114a565b600160a060020a031614905090565b600160a060020a0316600090815260d2602090815260408083205460d3909252909120549091565b60d15460ff1681565b60698054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108215780601f106107f657610100808354040283529160200191610821565b610daa610cea565b1515610dee576040805160e560020a62461bcd02815260206004820181905260248201526000805160206117e0833981519152604482015290519081900360640190fd5b610df782611106565b610cc58282611499565b6000610942610e0e61114a565b84610ab285606060405190810160405280602581526020016118d86025913960346000610e3961114a565b600160a060020a03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61139b16565b60d15460009060ff161515610e8757506000610946565b610e9083611106565b610e9a8383610e70565b5092915050565b600054610100900460ff1680610eba5750610eba61101b565b80610ec8575060005460ff16155b1515610f085760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611820602e913960400191505060405180910390fd5b600054610100900460ff16158015610f33576000805460ff1961ff0019909116610100171660011790555b609d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038481169190911791829055604051911690600090600080516020611800833981519152908290a38015610cc5576000805461ff00191690555050565b60d05481565b600160a060020a03918216600090815260346020908152604080832093909416825291909152205490565b610fcb610cea565b151561100f576040805160e560020a62461bcd02815260206004820181905260248201526000805160206117e0833981519152604482015290519081900360640190fd5b61101881611589565b50565b303b1590565b600160a060020a0382161515611081576040805160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b603554611094908263ffffffff61143516565b603555600160a060020a0382166000908152603360205260409020546110c0908263ffffffff61143516565b600160a060020a038316600081815260336020908152604080832094909455835185815293519293919260008051602061184e8339815191529281900390910190a35050565b600160a060020a038116600090815260d26020526040812042905561112a82610b30565b600160a060020a03909216600090815260d3602052604090209190915550565b3390565b600160a060020a03831615156111985760405160e560020a62461bcd0281526004018080602001828103825260248152602001806118b46024913960400191505060405180910390fd5b600160a060020a03821615156111e25760405160e560020a62461bcd0281526004018080602001828103825260228152602001806117706022913960400191505060405180910390fd5b600160a060020a03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038316151561128e5760405160e560020a62461bcd02815260040180806020018281038252602581526020018061188f6025913960400191505060405180910390fd5b600160a060020a03821615156112d85760405160e560020a62461bcd0281526004018080602001828103825260238152602001806117056023913960400191505060405180910390fd5b61131c816060604051908101604052806026815260200161179260269139600160a060020a038616600090815260336020526040902054919063ffffffff61139b16565b600160a060020a038085166000908152603360205260408082209390935590841681522054611351908263ffffffff61143516565b600160a060020a03808416600081815260336020908152604091829020949094558051858152905191939287169260008051602061184e83398151915292918290030190a3505050565b6000818484111561142d5760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113f25781810151838201526020016113da565b50505050905090810190601f16801561141f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015611492576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a03821615156114e35760405160e560020a62461bcd02815260040180806020018281038252602181526020018061186e6021913960400191505060405180910390fd5b611527816060604051908101604052806022815260200161172860229139600160a060020a038516600090815260336020526040902054919063ffffffff61139b16565b600160a060020a038316600090815260336020526040902055603554611553908263ffffffff61162a16565b603555604080518281529051600091600160a060020a0385169160008051602061184e8339815191529181900360200190a35050565b600160a060020a03811615156115d35760405160e560020a62461bcd02815260040180806020018281038252602681526020018061174a6026913960400191505060405180910390fd5b609d54604051600160a060020a0380841692169060008051602061180083398151915290600090a3609d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600061149283836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061139b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116ad57805160ff19168380011785556116da565b828001600101855582156116da579182015b828111156116da5782518255916020019190600101906116bf565b506116e69291506116ea565b5090565b61082991905b808211156116e657600081556001016116f056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa165627a7a723058206aed496eb039dc6747a1beb8cc5060217f10302c42e1e2af9414db8eecbe221b0029",
  "sourceMap": "763:5086:3:-;;;;;;;;;",
  "deployedSourceMap": "763:5086:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:5086:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;739:81:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2695:506:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2695:506:3;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2695:506:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2695:506:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2695:506:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2695:506:3;;;;;;;;-1:-1:-1;2695:506:3;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;2695:506:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2695:506:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2695:506:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2695:506:3;;-1:-1:-1;;;;2695:506:3;;;;;-1:-1:-1;2695:506:3;;;;;;;-1:-1:-1;;;;;2695:506:3;;;;;;;;;;:::i;:::-;;2577:149:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2577:149:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;492:182:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:182:16;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:16;;;;;;;;-1:-1:-1;492:182:16;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;492:182:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;492:182:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;492:182:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;492:182:16;;-1:-1:-1;;;492:182:16;;;;;-1:-1:-1;492:182:16;;-1:-1:-1;492:182:16:i;1636:89:15:-;;;:::i;:::-;;;;;;;;;;;;;;;;3184:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3184:300:15;;;;;;;;;;;;;;;;;:::i;1567:81:16:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3879:207:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3879:207:15;;;;;;;;:::i;1688:52:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1688:52:3;-1:-1:-1;;;;;1688:52:3;;:::i;1783:108:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1783:108:15;-1:-1:-1;;;;;1783:108:15;;:::i;1746:137:14:-;;;:::i;1214:17:3:-;;;:::i;4524:309::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4524:309:3;;;;;;;;:::i;1488:51::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1488:51:3;-1:-1:-1;;;;;1488:51:3;;:::i;959:77:14:-;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:14;;;;;;;;;;;;;;1310:92;;;:::i;5627:220:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5627:220:3;-1:-1:-1;;;;;5627:220:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1079:24;;;:::i;933:85:16:-;;;:::i;5141:134:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5141:134:3;;;;;;;;:::i;4573:258:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4573:258:15;;;;;;;;:::i;3962:265:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3962:265:3;;;;;;;;:::i;741:142:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;741:142:14;-1:-1:-1;;;;;741:142:14;;:::i;936:24:3:-;;;:::i;2307:132:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2307:132:15;;;;;;;;;;:::i;2032:107:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:14;-1:-1:-1;;;;;2032:107:14;;:::i;739:81:16:-;808:5;801:12;;;;;;;;-1:-1:-1;;801:12:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:13;;801:12;;808:5;;801:12;;808:5;801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:81;;:::o;2695:506:3:-;1024:12:18;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:18;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:18;;;;;1225:18;1213:4;1225:18;;;1170:80;2927:51:3;2952:10;2964:9;2975:2;2927:24;:51::i;:::-;2988:12;:30;;-1:-1:-1;;2988:30:3;;;;;-1:-1:-1;;3028:14:3;2988:30;3028:14;;;;;;;;;;;;;3052:9;:22;;;-1:-1:-1;3088:14:3;3084:111;;;3118:24;3124:11;3137:4;3118:5;:24::i;:::-;3156:28;3172:11;3156:15;:28::i;:::-;1268:14:18;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:18;;;1264:55;2695:506:3;;;;;;;:::o;2577:149:15:-;2643:4;2659:39;2668:12;:10;:12::i;:::-;2682:7;2691:6;2659:8;:39::i;:::-;-1:-1:-1;2715:4:15;2577:149;;;;;:::o;492:182:16:-;1024:12:18;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:18;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:18;;;;;1225:18;1213:4;1225:18;;;1170:80;599:12:16;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;621:16:16;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;647:9:16;:20;;-1:-1:-1;;647:20:16;;;;;;;1264:55:18;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:18;;;1264:55;492:182:16;;;;:::o;1636:89:15:-;1706:12;;1636:89;:::o;3184:300::-;3273:4;3289:36;3299:6;3307:9;3318:6;3289:9;:36::i;:::-;3335:121;3344:6;3352:12;:10;:12::i;:::-;3366:89;3404:6;3366:89;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3366:19:15;;;;;;:11;:19;;;;;;3386:12;:10;:12::i;:::-;-1:-1:-1;;;;;3366:33:15;;;;;;;;;;;;-1:-1:-1;3366:33:15;;;:89;;:37;:89;:::i;:::-;3335:8;:121::i;:::-;-1:-1:-1;3473:4:15;3184:300;;;;;:::o;1567:81:16:-;1632:9;;;;1567:81;:::o;3879:207:15:-;3959:4;3975:83;3984:12;:10;:12::i;:::-;3998:7;4007:50;4046:10;4007:11;:25;4019:12;:10;:12::i;:::-;-1:-1:-1;;;;;4007:25:15;;;;;;;;;;;;;;;;;-1:-1:-1;4007:25:15;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1688:52:3:-;;;;;;;;;;;;;:::o;1783:108:15:-;-1:-1:-1;;;;;1866:18:15;1840:7;1866:18;;;:9;:18;;;;;;;1783:108::o;1746:137:14:-;1163:9;:7;:9::i;:::-;1155:54;;;;;;;-1:-1:-1;;;;;1155:54:14;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:14;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:14;;-1:-1:-1;;;;;;;;;;;1807:40:14;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;1857:19:14;;;1746:137::o;1214:17:3:-;;;;;;;;;:::o;4524:309::-;1163:9:14;:7;:9::i;:::-;1155:54;;;;;;;-1:-1:-1;;;;;1155:54:14;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:14;;;;;;;;;;;;;;;4612:1:3;4600:9;;:13;4596:172;;;4684:9;;4654:26;4672:7;4654:13;:11;:13::i;:::-;:17;:26;:17;:26;:::i;:::-;:39;;4629:128;;;;;-1:-1:-1;;;;;4629:128:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4777:20;4793:3;4777:15;:20::i;:::-;4807:19;4813:3;4818:7;4807:5;:19::i;:::-;4524:309;;:::o;1488:51::-;;;;;;;;;;;;;:::o;959:77:14:-;1023:6;;-1:-1:-1;;;;;1023:6:14;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:14;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:14;;1366:29;;1310:92;:::o;5627:220:3:-;-1:-1:-1;;;;;5769:26:3;5719:12;5769:26;;;:16;:26;;;;;;;;;5813:17;:27;;;;;;;5769:26;;5627:220::o;1079:24::-;;;;;;:::o;933:85:16:-;1004:7;997:14;;;;;;;;-1:-1:-1;;997:14:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:13;;997:14;;1004:7;;997:14;;1004:7;997:14;;;;;;;;;;;;;;;;;;;;;;;;5141:134:3;1163:9:14;:7;:9::i;:::-;1155:54;;;;;;;-1:-1:-1;;;;;1155:54:14;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:14;;;;;;;;;;;;;;;5215:22:3;5231:5;5215:15;:22::i;:::-;5247:21;5253:5;5260:7;5247:5;:21::i;4573:258:15:-;4658:4;4674:129;4683:12;:10;:12::i;:::-;4697:7;4706:96;4745:15;4706:96;;;;;;;;;;;;;;;;;;:11;:25;4718:12;:10;:12::i;:::-;-1:-1:-1;;;;;4706:25:15;;;;;;;;;;;;;;;;;-1:-1:-1;4706:25:15;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;3962:265:3:-;4072:12;;4047:4;;4072:12;;4071:13;4067:154;;;-1:-1:-1;4107:5:3;4100:12;;4067:154;4143:26;4159:9;4143:15;:26::i;:::-;4183:27;4192:9;4203:6;4183:8;:27::i;:::-;;3962:265;;;;:::o;741:142:14:-;1024:12:18;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:18;;;;1059:12;1024:47;1016:106;;;;;;-1:-1:-1;;;;;1016:106:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:18;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:14;:15;;-1:-1:-1;;806:15:14;-1:-1:-1;;;;;806:15:14;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;;;;;;;;;;;;836:40:14;-1:-1:-1;;836:40:14;1268:14:18;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:18;;;741:142:14;;:::o;936:24:3:-;;;;:::o;2307:132:15:-;-1:-1:-1;;;;;2405:18:15;;;2379:7;2405:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2307:132::o;2032:107:14:-;1163:9;:7;:9::i;:::-;1155:54;;;;;;;-1:-1:-1;;;;;1155:54:14;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:14;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;:::-;2032:107;:::o;1409:498:18:-;1820:4;1864:17;1895:7;1409:498;:::o;6039:302:15:-;-1:-1:-1;;;;;6114:21:15;;;;6106:65;;;;;-1:-1:-1;;;;;6106:65:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:12;;:24;;6214:6;6197:24;:16;:24;:::i;:::-;6182:12;:39;-1:-1:-1;;;;;6252:18:15;;;;;;:9;:18;;;;;;:30;;6275:6;6252:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6231:18:15;;;;;;:9;:18;;;;;;;;:51;;;;6297:37;;;;;;;6231:18;;;;-1:-1:-1;;;;;;;;;;;6297:37:15;;;;;;;;;6039:302;;:::o;3354:207:3:-;-1:-1:-1;;;;;3417:27:3;;;;;;:16;:27;;;;;3447:3;3417:33;;3482:20;3434:9;3482;:20::i;:::-;-1:-1:-1;;;;;3512:28:3;;;;;;;:17;:28;;;;;:42;;;;-1:-1:-1;3354:207:3:o;867:96:12:-;946:10;867:96;:::o;7428:332:15:-;-1:-1:-1;;;;;7521:19:15;;;;7513:68;;;;-1:-1:-1;;;;;7513:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7599:21:15;;;;7591:68;;;;-1:-1:-1;;;;;7591:68:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7670:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7721:32;;;;;;;;;;;;;;;;;7428:332;;;:::o;5305:464::-;-1:-1:-1;;;;;5402:20:15;;;;5394:70;;;;-1:-1:-1;;;;;5394:70:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5482:23:15;;;;5474:71;;;;-1:-1:-1;;;;;5474:71:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5576;5598:6;5576:71;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:17:15;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5556:17:15;;;;;;;:9;:17;;;;;;:91;;;;5680:20;;;;;;;:32;;5705:6;5680:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5657:20:15;;;;;;;:9;:20;;;;;;;;;:55;;;;5727:35;;;;;;;5657:20;;5727:35;;;;-1:-1:-1;;;;;;;;;;;5727:35:15;;;;;;;;5305:464;;;:::o;1732:187:13:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;;;1837:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:13;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:13:o;6661:342:15:-;-1:-1:-1;;;;;6736:21:15;;;;6728:67;;;;-1:-1:-1;;;;;6728:67:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6827:68;6850:6;6827:68;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6827:18:15;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;6806:18:15;;;;;;:9;:18;;;;;:89;6920:12;;:24;;6937:6;6920:24;:16;:24;:::i;:::-;6905:12;:39;6959:37;;;;;;;;6985:1;;-1:-1:-1;;;;;6959:37:15;;;-1:-1:-1;;;;;;;;;;;6959:37:15;;;;;;;;6661:342;;:::o;2240:225:14:-;-1:-1:-1;;;;;2313:22:14;;;;2305:73;;;;-1:-1:-1;;;;;2305:73:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:14;;;;2414:6;;-1:-1:-1;;;;;;;;;;;2393:38:14;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;2441:17:14;-1:-1:-1;;;;;2441:17:14;;;;;;;;;;2240:225::o;1274:134:13:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;;:3;:43::i;763:5086:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;763:5086:3;;;-1:-1:-1;763:5086:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.3;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\";\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\";\n\n////////////////////////////////////////////////////////////////////////////////////////////\n/// @title Synaps\n/// @author Christopher Dixon\n////////////////////////////////////////////////////////////////////////////////////////////\n/**\nThe Synaps is designed to be a flexible ERC20 token that can be used by a ZDAO in multiple ways.\n**/\n\ncontract Synaps is  Initializable, ERC20, ERC20Detailed, Ownable {\n    using SafeMath for uint256;\n\n    /// @notice maxSupply is used as a cap on the tokens totalSupply\n    uint256 public maxSupply;\n    /// @notice transferable is a bool representing whether or not this rep token can be transfered by its owner\n    bool public transferable;\n    ///@notice isRep signafies whether or not the synaps being created will be used as a DAO's rep token\n    bool public isRep;\n    /// @notice tokenTimeTracker is responsible for tracking when tokens are transfered from one account to another\n    /// @dev this is important for making sure proposal voting cant be done with the same tokens using multiple\n    ///       accounts\n    mapping(address => uint256) public tokenTimeTracker;\n    /// @notice tokenSpaceTracker is used to track the amount of tokens an account has when its time is tracked by\n    ///    tokenTimeTracker\n    mapping(address => uint256) public tokenSpaceTracker;\n\n    /**\n     @notice the constructor function is fired only once during contract creation and is used to set up\n                the ZDAO rep token\n     @dev this function mints one token to the DAO creator so that they can install neurons on the DAO after\n                its creation\n     @param _tokenName is the name of the token\n     @param _tokenSym is the symbol of the token\n     @param _isTransferable is a bool representing whether of not this token is transferable\n     @param _isRep is a bool representing whether or not this token will be used as a DAO repToken\n     @param _DAOcreator is the address of the person who created the DAO that is creating this token.\n     @dev if _DAOcreator is equal to the DAO(the msg.sender) and the token is not being used as a rep token\n                then the constructor will not mint a first token\n     @param _maxSupply is the maximum supply this synaps will be capped at(uncapped == 0)\n     **/\n    function initialize(\n        string memory _tokenName,\n        string memory _tokenSym,\n        bool _isTransferable,\n        bool _isRep,\n        address _DAOcreator,\n        uint256 _maxSupply\n    ) initializer\n    public {\n      ERC20Detailed.initialize(_tokenName, _tokenSym, 18);\n        transferable = _isTransferable;\n        isRep = _isRep;\n        maxSupply = _maxSupply;\n        if (_isRep == true) {\n            _mint(_DAOcreator, 1e18);\n            tokenRelativity(_DAOcreator);\n        }\n    }\n\n    /**\n    @notice tokenRelativity is used to track which tokens where in an account when\n    @param recipient is address being localized\n    **/\n    function tokenRelativity(address recipient) internal {\n        tokenTimeTracker[recipient] = now;\n        uint256 currentHodl = balanceOf(recipient);\n        tokenSpaceTracker[recipient] = currentHodl;\n    }\n\n    /**\n     @notice transfer is an override function for the standard ERC20 transfer function\n     @dev this override function is used to check if a token allows for transfers\n     @param recipient is the address the tokens are being transfered to\n     @param amount is the amount of token being transfered\n     @return is a bool representing whether or not the transfer was successful\n    **/\n    function transfer(address recipient, uint256 amount)\n        public\n        returns (bool)\n    {\n        if (!transferable) {\n            return false;\n        } else {\n            tokenRelativity(recipient);\n            transfer(recipient, amount);\n        }\n    }\n\n    /**\n     @notice _Mint allows the owner of this token contract to mint new tokens\n     @dev this function will fail if called by anyone who isnt the contract owner\n     @param _to is the address tokens are being minted to\n     @param _amount is the amount of tokens being minted\n    **/\n    function _Mint(address _to, uint256 _amount) public onlyOwner {\n        if (maxSupply > 0) {\n            require(\n                totalSupply().add(_amount) <= maxSupply,\n                \"Max total supply limit reached\"\n            );\n        }\n        tokenRelativity(_to);\n        _mint(_to, _amount);\n    }\n\n    /**\n     @notice _Burn allows the owner of this token contract to burn tokens from an account\n     @dev this function will fail if called by anyone other than the owner\n     @param _from is the address the tokens are being burnt from\n     @param _amount is the amount of tokens being burnt\n    **/\n    function _Burn(address _from, uint256 _amount) public onlyOwner {\n        tokenRelativity(_from);\n        _burn(_from, _amount);\n    }\n\n    /**\n    @notice getRelativePosition is used by the DAO to determine the voting status of an account in DAO's where\n            the rep is transferable.\n    @dev this is needed to ensure on person cant vote multiple times by transfering his rep to seperate accounts\n    @param _account is the account whos position is being calculated\n    **/\n    function getRelativePosition(address _account)\n        public\n        view\n        returns (uint256 time, uint256 space)\n    {\n        time = tokenTimeTracker[_account];\n        space = tokenSpaceTracker[_account];\n    }\n}\n",
  "sourcePath": "/home/stan36/repos/zer0/ZDAO/contracts/Cortex/Synaps.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/zer0/ZDAO/contracts/Cortex/Synaps.sol",
    "exportedSymbols": {
      "Synaps": [
        1317
      ]
    },
    "id": 1318,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1108,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 1109,
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2323,
        "src": "25:82:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 1110,
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2940,
        "src": "108:60:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "id": 1111,
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2199,
        "src": "169:78:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "id": 1112,
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2735,
        "src": "248:82:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 1113,
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2802,
        "src": "331:90:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1114,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2939,
              "src": "783:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2939",
                "typeString": "contract Initializable"
              }
            },
            "id": 1115,
            "nodeType": "InheritanceSpecifier",
            "src": "783:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1116,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2734,
              "src": "798:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2734",
                "typeString": "contract ERC20"
              }
            },
            "id": 1117,
            "nodeType": "InheritanceSpecifier",
            "src": "798:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1118,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2801,
              "src": "805:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2801",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1119,
            "nodeType": "InheritanceSpecifier",
            "src": "805:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1120,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2322,
              "src": "820:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2322",
                "typeString": "contract Ownable"
              }
            },
            "id": 1121,
            "nodeType": "InheritanceSpecifier",
            "src": "820:7:3"
          }
        ],
        "contractDependencies": [
          2011,
          2322,
          2734,
          2801,
          2870,
          2939
        ],
        "contractKind": "contract",
        "documentation": "The Synaps is designed to be a flexible ERC20 token that can be used by a ZDAO in multiple ways.*",
        "fullyImplemented": true,
        "id": 1317,
        "linearizedBaseContracts": [
          1317,
          2322,
          2801,
          2734,
          2870,
          2011,
          2939
        ],
        "name": "Synaps",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1124,
            "libraryName": {
              "contractScope": null,
              "id": 1122,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2198,
              "src": "840:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2198",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "834:27:3",
            "typeName": {
              "id": 1123,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "853:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1126,
            "name": "maxSupply",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "936:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1125,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "936:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1128,
            "name": "transferable",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1079:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1127,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1079:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1130,
            "name": "isRep",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1214:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1129,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1214:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1134,
            "name": "tokenTimeTracker",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1488:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1133,
              "keyType": {
                "id": 1131,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1496:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1488:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1132,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1507:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1138,
            "name": "tokenSpaceTracker",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1688:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1137,
              "keyType": {
                "id": 1135,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1696:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1688:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1136,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1707:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "2919:282:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1158,
                        "name": "_tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1140,
                        "src": "2952:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1159,
                        "name": "_tokenSym",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1142,
                        "src": "2964:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2975:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1155,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2801,
                        "src": "2927:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2801_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2772,
                      "src": "2927:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2927:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1162,
                  "nodeType": "ExpressionStatement",
                  "src": "2927:51:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1163,
                      "name": "transferable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "2988:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1164,
                      "name": "_isTransferable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "3003:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2988:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "2988:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1167,
                      "name": "isRep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "3028:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1168,
                      "name": "_isRep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1146,
                      "src": "3036:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3028:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "3028:14:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1171,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "3052:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1172,
                      "name": "_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1150,
                      "src": "3064:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3052:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1174,
                  "nodeType": "ExpressionStatement",
                  "src": "3052:22:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1175,
                      "name": "_isRep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1146,
                      "src": "3088:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3098:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3088:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1188,
                  "nodeType": "IfStatement",
                  "src": "3084:111:3",
                  "trueBody": {
                    "id": 1187,
                    "nodeType": "Block",
                    "src": "3104:91:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1179,
                              "name": "_DAOcreator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "3124:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31653138",
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3137:4:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "id": 1178,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2614,
                            "src": "3118:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3118:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1182,
                        "nodeType": "ExpressionStatement",
                        "src": "3118:24:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1184,
                              "name": "_DAOcreator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "3172:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1183,
                            "name": "tokenRelativity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1214,
                            "src": "3156:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3156:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1186,
                        "nodeType": "ExpressionStatement",
                        "src": "3156:28:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice the constructor function is fired only once during contract creation and is used to set up\nthe ZDAO rep token\n@dev this function mints one token to the DAO creator so that they can install neurons on the DAO after\nits creation\n@param _tokenName is the name of the token\n@param _tokenSym is the symbol of the token\n@param _isTransferable is a bool representing whether of not this token is transferable\n@param _isRep is a bool representing whether or not this token will be used as a DAO repToken\n@param _DAOcreator is the address of the person who created the DAO that is creating this token.\n@dev if _DAOcreator is equal to the DAO(the msg.sender) and the token is not being used as a rep token\nthen the constructor will not mint a first token\n@param _maxSupply is the maximum supply this synaps will be capped at(uncapped == 0)*",
            "id": 1190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1153,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1152,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2914,
                  "src": "2896:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2896:11:3"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "name": "_tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2724:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2724:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1142,
                  "name": "_tokenSym",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2758:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1144,
                  "name": "_isTransferable",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2791:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2791:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1146,
                  "name": "_isRep",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2821:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2821:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1148,
                  "name": "_DAOcreator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2842:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2842:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1150,
                  "name": "_maxSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2871:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2714:181:3"
            },
            "returnParameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2919:0:3"
            },
            "scope": 1317,
            "src": "2695:506:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1213,
              "nodeType": "Block",
              "src": "3407:154:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1195,
                        "name": "tokenTimeTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "3417:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1197,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1196,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "3434:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3417:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1198,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3770,
                      "src": "3447:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3417:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "3417:33:3"
                },
                {
                  "assignments": [
                    1202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1202,
                      "name": "currentHodl",
                      "nodeType": "VariableDeclaration",
                      "scope": 1213,
                      "src": "3460:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3460:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1206,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1204,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "3492:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1203,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2369,
                      "src": "3482:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3482:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3460:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1207,
                        "name": "tokenSpaceTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "3512:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1209,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1208,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "3530:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3512:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1210,
                      "name": "currentHodl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "3543:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3512:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "3512:42:3"
                }
              ]
            },
            "documentation": "@notice tokenRelativity is used to track which tokens where in an account when\n@param recipient is address being localized*",
            "id": 1214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenRelativity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "3379:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3379:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3378:19:3"
            },
            "returnParameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3407:0:3"
            },
            "scope": 1317,
            "src": "3354:207:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "4057:170:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4071:13:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1223,
                      "name": "transferable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "4072:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1237,
                    "nodeType": "Block",
                    "src": "4129:92:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1229,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1216,
                              "src": "4159:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1228,
                            "name": "tokenRelativity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1214,
                            "src": "4143:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4143:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1231,
                        "nodeType": "ExpressionStatement",
                        "src": "4143:26:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1233,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1216,
                              "src": "4192:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1234,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "4203:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1232,
                            "name": "transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1240
                            ],
                            "referencedDeclaration": 1240,
                            "src": "4183:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4183:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1236,
                        "nodeType": "ExpressionStatement",
                        "src": "4183:27:3"
                      }
                    ]
                  },
                  "id": 1238,
                  "nodeType": "IfStatement",
                  "src": "4067:154:3",
                  "trueBody": {
                    "id": 1227,
                    "nodeType": "Block",
                    "src": "4086:37:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4107:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1222,
                        "id": 1226,
                        "nodeType": "Return",
                        "src": "4100:12:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice transfer is an override function for the standard ERC20 transfer function\n@dev this override function is used to check if a token allows for transfers\n@param recipient is the address the tokens are being transfered to\n@param amount is the amount of token being transfered\n@return is a bool representing whether or not the transfer was successful*",
            "id": 1240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1216,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "3980:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3980:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1218,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "3999:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3999:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3979:35:3"
            },
            "returnParameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1221,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "4047:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4046:6:3"
            },
            "scope": 1317,
            "src": "3962:265:3",
            "stateMutability": "nonpayable",
            "superFunction": 2388,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1274,
              "nodeType": "Block",
              "src": "4586:247:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1249,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "4600:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4612:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4600:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1264,
                  "nodeType": "IfStatement",
                  "src": "4596:172:3",
                  "trueBody": {
                    "id": 1263,
                    "nodeType": "Block",
                    "src": "4615:153:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1256,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1244,
                                    "src": "4672:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1253,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2357,
                                      "src": "4654:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 1254,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4654:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1255,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2038,
                                  "src": "4654:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4654:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1258,
                                "name": "maxSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1126,
                                "src": "4684:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4654:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d617820746f74616c20737570706c79206c696d69742072656163686564",
                              "id": 1260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4711:32:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_032ff3e3c423d01807caf39d0cf9318a9b3fc35dc215e1862d15799983fca5d2",
                                "typeString": "literal_string \"Max total supply limit reached\""
                              },
                              "value": "Max total supply limit reached"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_032ff3e3c423d01807caf39d0cf9318a9b3fc35dc215e1862d15799983fca5d2",
                                "typeString": "literal_string \"Max total supply limit reached\""
                              }
                            ],
                            "id": 1252,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3771,
                              3772
                            ],
                            "referencedDeclaration": 3772,
                            "src": "4629:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4629:128:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1262,
                        "nodeType": "ExpressionStatement",
                        "src": "4629:128:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1266,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "4793:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1265,
                      "name": "tokenRelativity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "4777:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4777:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "4777:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1270,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "4813:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1271,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1244,
                        "src": "4818:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1269,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2614,
                      "src": "4807:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4807:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "4807:19:3"
                }
              ]
            },
            "documentation": "@notice _Mint allows the owner of this token contract to mint new tokens\n@dev this function will fail if called by anyone who isnt the contract owner\n@param _to is the address tokens are being minted to\n@param _amount is the amount of tokens being minted*",
            "id": 1275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1247,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1246,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2251,
                  "src": "4576:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4576:9:3"
              }
            ],
            "name": "_Mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1242,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "4539:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4539:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1244,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "4552:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4552:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4538:30:3"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4586:0:3"
            },
            "scope": 1317,
            "src": "4524:309:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1293,
              "nodeType": "Block",
              "src": "5205:70:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1285,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "5231:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1284,
                      "name": "tokenRelativity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "5215:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5215:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1287,
                  "nodeType": "ExpressionStatement",
                  "src": "5215:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1289,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "5253:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1290,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1279,
                        "src": "5260:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1288,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2658,
                      "src": "5247:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5247:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "5247:21:3"
                }
              ]
            },
            "documentation": "@notice _Burn allows the owner of this token contract to burn tokens from an account\n@dev this function will fail if called by anyone other than the owner\n@param _from is the address the tokens are being burnt from\n@param _amount is the amount of tokens being burnt*",
            "id": 1294,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1282,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1281,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2251,
                  "src": "5195:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5195:9:3"
              }
            ],
            "name": "_Burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1277,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1294,
                  "src": "5156:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5156:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1279,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1294,
                  "src": "5171:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5155:32:3"
            },
            "returnParameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5205:0:3"
            },
            "scope": 1317,
            "src": "5141:134:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1315,
              "nodeType": "Block",
              "src": "5752:95:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1303,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1299,
                      "src": "5762:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1304,
                        "name": "tokenTimeTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "5769:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1306,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1305,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1296,
                        "src": "5786:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5769:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5762:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "5762:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1309,
                      "name": "space",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1301,
                      "src": "5805:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1310,
                        "name": "tokenSpaceTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "5813:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1312,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1311,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1296,
                        "src": "5831:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5813:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5805:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1314,
                  "nodeType": "ExpressionStatement",
                  "src": "5805:35:3"
                }
              ]
            },
            "documentation": "@notice getRelativePosition is used by the DAO to determine the voting status of an account in DAO's where\nthe rep is transferable.\n@dev this is needed to ensure on person cant vote multiple times by transfering his rep to seperate accounts\n@param _account is the account whos position is being calculated*",
            "id": 1316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRelativePosition",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1296,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1316,
                  "src": "5656:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5655:18:3"
            },
            "returnParameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1299,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 1316,
                  "src": "5719:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5719:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1301,
                  "name": "space",
                  "nodeType": "VariableDeclaration",
                  "scope": 1316,
                  "src": "5733:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5733:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5718:29:3"
            },
            "scope": 1317,
            "src": "5627:220:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1318,
        "src": "763:5086:3"
      }
    ],
    "src": "0:5850:3"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/zer0/ZDAO/contracts/Cortex/Synaps.sol",
    "exportedSymbols": {
      "Synaps": [
        1317
      ]
    },
    "id": 1318,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1108,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 1109,
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2323,
        "src": "25:82:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 1110,
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2940,
        "src": "108:60:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "id": 1111,
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2199,
        "src": "169:78:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
        "id": 1112,
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2735,
        "src": "248:82:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 1113,
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2802,
        "src": "331:90:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1114,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2939,
              "src": "783:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2939",
                "typeString": "contract Initializable"
              }
            },
            "id": 1115,
            "nodeType": "InheritanceSpecifier",
            "src": "783:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1116,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2734,
              "src": "798:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2734",
                "typeString": "contract ERC20"
              }
            },
            "id": 1117,
            "nodeType": "InheritanceSpecifier",
            "src": "798:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1118,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2801,
              "src": "805:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2801",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1119,
            "nodeType": "InheritanceSpecifier",
            "src": "805:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1120,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2322,
              "src": "820:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2322",
                "typeString": "contract Ownable"
              }
            },
            "id": 1121,
            "nodeType": "InheritanceSpecifier",
            "src": "820:7:3"
          }
        ],
        "contractDependencies": [
          2011,
          2322,
          2734,
          2801,
          2870,
          2939
        ],
        "contractKind": "contract",
        "documentation": "The Synaps is designed to be a flexible ERC20 token that can be used by a ZDAO in multiple ways.*",
        "fullyImplemented": true,
        "id": 1317,
        "linearizedBaseContracts": [
          1317,
          2322,
          2801,
          2734,
          2870,
          2011,
          2939
        ],
        "name": "Synaps",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1124,
            "libraryName": {
              "contractScope": null,
              "id": 1122,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2198,
              "src": "840:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2198",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "834:27:3",
            "typeName": {
              "id": 1123,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "853:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1126,
            "name": "maxSupply",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "936:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1125,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "936:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1128,
            "name": "transferable",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1079:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1127,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1079:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1130,
            "name": "isRep",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1214:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1129,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1214:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1134,
            "name": "tokenTimeTracker",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1488:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1133,
              "keyType": {
                "id": 1131,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1496:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1488:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1132,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1507:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1138,
            "name": "tokenSpaceTracker",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1688:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1137,
              "keyType": {
                "id": 1135,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1696:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1688:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1136,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1707:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "2919:282:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1158,
                        "name": "_tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1140,
                        "src": "2952:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1159,
                        "name": "_tokenSym",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1142,
                        "src": "2964:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2975:2:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1155,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2801,
                        "src": "2927:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2801_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2772,
                      "src": "2927:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2927:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1162,
                  "nodeType": "ExpressionStatement",
                  "src": "2927:51:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1163,
                      "name": "transferable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "2988:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1164,
                      "name": "_isTransferable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "3003:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2988:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "2988:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1167,
                      "name": "isRep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "3028:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1168,
                      "name": "_isRep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1146,
                      "src": "3036:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3028:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "3028:14:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1171,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "3052:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1172,
                      "name": "_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1150,
                      "src": "3064:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3052:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1174,
                  "nodeType": "ExpressionStatement",
                  "src": "3052:22:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1175,
                      "name": "_isRep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1146,
                      "src": "3088:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3098:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3088:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1188,
                  "nodeType": "IfStatement",
                  "src": "3084:111:3",
                  "trueBody": {
                    "id": 1187,
                    "nodeType": "Block",
                    "src": "3104:91:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1179,
                              "name": "_DAOcreator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "3124:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31653138",
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3137:4:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "id": 1178,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2614,
                            "src": "3118:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3118:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1182,
                        "nodeType": "ExpressionStatement",
                        "src": "3118:24:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1184,
                              "name": "_DAOcreator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "3172:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1183,
                            "name": "tokenRelativity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1214,
                            "src": "3156:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3156:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1186,
                        "nodeType": "ExpressionStatement",
                        "src": "3156:28:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice the constructor function is fired only once during contract creation and is used to set up\nthe ZDAO rep token\n@dev this function mints one token to the DAO creator so that they can install neurons on the DAO after\nits creation\n@param _tokenName is the name of the token\n@param _tokenSym is the symbol of the token\n@param _isTransferable is a bool representing whether of not this token is transferable\n@param _isRep is a bool representing whether or not this token will be used as a DAO repToken\n@param _DAOcreator is the address of the person who created the DAO that is creating this token.\n@dev if _DAOcreator is equal to the DAO(the msg.sender) and the token is not being used as a rep token\nthen the constructor will not mint a first token\n@param _maxSupply is the maximum supply this synaps will be capped at(uncapped == 0)*",
            "id": 1190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1153,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1152,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2914,
                  "src": "2896:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2896:11:3"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "name": "_tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2724:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2724:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1142,
                  "name": "_tokenSym",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2758:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1144,
                  "name": "_isTransferable",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2791:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2791:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1146,
                  "name": "_isRep",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2821:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2821:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1148,
                  "name": "_DAOcreator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2842:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2842:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1150,
                  "name": "_maxSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2871:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2714:181:3"
            },
            "returnParameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2919:0:3"
            },
            "scope": 1317,
            "src": "2695:506:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1213,
              "nodeType": "Block",
              "src": "3407:154:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1195,
                        "name": "tokenTimeTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "3417:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1197,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1196,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "3434:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3417:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1198,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3770,
                      "src": "3447:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3417:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "3417:33:3"
                },
                {
                  "assignments": [
                    1202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1202,
                      "name": "currentHodl",
                      "nodeType": "VariableDeclaration",
                      "scope": 1213,
                      "src": "3460:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3460:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1206,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1204,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "3492:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1203,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2369,
                      "src": "3482:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3482:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3460:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1207,
                        "name": "tokenSpaceTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "3512:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1209,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1208,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "3530:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3512:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1210,
                      "name": "currentHodl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "3543:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3512:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "3512:42:3"
                }
              ]
            },
            "documentation": "@notice tokenRelativity is used to track which tokens where in an account when\n@param recipient is address being localized*",
            "id": 1214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenRelativity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "3379:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3379:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3378:19:3"
            },
            "returnParameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3407:0:3"
            },
            "scope": 1317,
            "src": "3354:207:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "4057:170:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4071:13:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1223,
                      "name": "transferable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "4072:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1237,
                    "nodeType": "Block",
                    "src": "4129:92:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1229,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1216,
                              "src": "4159:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1228,
                            "name": "tokenRelativity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1214,
                            "src": "4143:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4143:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1231,
                        "nodeType": "ExpressionStatement",
                        "src": "4143:26:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1233,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1216,
                              "src": "4192:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1234,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "4203:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1232,
                            "name": "transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1240
                            ],
                            "referencedDeclaration": 1240,
                            "src": "4183:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4183:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1236,
                        "nodeType": "ExpressionStatement",
                        "src": "4183:27:3"
                      }
                    ]
                  },
                  "id": 1238,
                  "nodeType": "IfStatement",
                  "src": "4067:154:3",
                  "trueBody": {
                    "id": 1227,
                    "nodeType": "Block",
                    "src": "4086:37:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4107:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1222,
                        "id": 1226,
                        "nodeType": "Return",
                        "src": "4100:12:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice transfer is an override function for the standard ERC20 transfer function\n@dev this override function is used to check if a token allows for transfers\n@param recipient is the address the tokens are being transfered to\n@param amount is the amount of token being transfered\n@return is a bool representing whether or not the transfer was successful*",
            "id": 1240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1216,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "3980:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3980:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1218,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "3999:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3999:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3979:35:3"
            },
            "returnParameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1221,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "4047:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4046:6:3"
            },
            "scope": 1317,
            "src": "3962:265:3",
            "stateMutability": "nonpayable",
            "superFunction": 2388,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1274,
              "nodeType": "Block",
              "src": "4586:247:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1249,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "4600:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4612:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4600:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1264,
                  "nodeType": "IfStatement",
                  "src": "4596:172:3",
                  "trueBody": {
                    "id": 1263,
                    "nodeType": "Block",
                    "src": "4615:153:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1256,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1244,
                                    "src": "4672:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1253,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2357,
                                      "src": "4654:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 1254,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4654:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1255,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2038,
                                  "src": "4654:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4654:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1258,
                                "name": "maxSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1126,
                                "src": "4684:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4654:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d617820746f74616c20737570706c79206c696d69742072656163686564",
                              "id": 1260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4711:32:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_032ff3e3c423d01807caf39d0cf9318a9b3fc35dc215e1862d15799983fca5d2",
                                "typeString": "literal_string \"Max total supply limit reached\""
                              },
                              "value": "Max total supply limit reached"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_032ff3e3c423d01807caf39d0cf9318a9b3fc35dc215e1862d15799983fca5d2",
                                "typeString": "literal_string \"Max total supply limit reached\""
                              }
                            ],
                            "id": 1252,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3771,
                              3772
                            ],
                            "referencedDeclaration": 3772,
                            "src": "4629:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4629:128:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1262,
                        "nodeType": "ExpressionStatement",
                        "src": "4629:128:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1266,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "4793:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1265,
                      "name": "tokenRelativity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "4777:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4777:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "4777:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1270,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "4813:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1271,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1244,
                        "src": "4818:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1269,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2614,
                      "src": "4807:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4807:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "4807:19:3"
                }
              ]
            },
            "documentation": "@notice _Mint allows the owner of this token contract to mint new tokens\n@dev this function will fail if called by anyone who isnt the contract owner\n@param _to is the address tokens are being minted to\n@param _amount is the amount of tokens being minted*",
            "id": 1275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1247,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1246,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2251,
                  "src": "4576:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4576:9:3"
              }
            ],
            "name": "_Mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1242,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "4539:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4539:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1244,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "4552:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4552:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4538:30:3"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4586:0:3"
            },
            "scope": 1317,
            "src": "4524:309:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1293,
              "nodeType": "Block",
              "src": "5205:70:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1285,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "5231:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1284,
                      "name": "tokenRelativity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "5215:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5215:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1287,
                  "nodeType": "ExpressionStatement",
                  "src": "5215:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1289,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "5253:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1290,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1279,
                        "src": "5260:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1288,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2658,
                      "src": "5247:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5247:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "5247:21:3"
                }
              ]
            },
            "documentation": "@notice _Burn allows the owner of this token contract to burn tokens from an account\n@dev this function will fail if called by anyone other than the owner\n@param _from is the address the tokens are being burnt from\n@param _amount is the amount of tokens being burnt*",
            "id": 1294,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1282,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1281,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2251,
                  "src": "5195:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5195:9:3"
              }
            ],
            "name": "_Burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1277,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1294,
                  "src": "5156:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5156:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1279,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1294,
                  "src": "5171:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5155:32:3"
            },
            "returnParameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5205:0:3"
            },
            "scope": 1317,
            "src": "5141:134:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1315,
              "nodeType": "Block",
              "src": "5752:95:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1303,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1299,
                      "src": "5762:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1304,
                        "name": "tokenTimeTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "5769:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1306,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1305,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1296,
                        "src": "5786:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5769:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5762:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "5762:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1309,
                      "name": "space",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1301,
                      "src": "5805:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1310,
                        "name": "tokenSpaceTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "5813:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1312,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1311,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1296,
                        "src": "5831:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5813:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5805:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1314,
                  "nodeType": "ExpressionStatement",
                  "src": "5805:35:3"
                }
              ]
            },
            "documentation": "@notice getRelativePosition is used by the DAO to determine the voting status of an account in DAO's where\nthe rep is transferable.\n@dev this is needed to ensure on person cant vote multiple times by transfering his rep to seperate accounts\n@param _account is the account whos position is being calculated*",
            "id": 1316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRelativePosition",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1296,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1316,
                  "src": "5656:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5655:18:3"
            },
            "returnParameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1299,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 1316,
                  "src": "5719:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5719:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1301,
                  "name": "space",
                  "nodeType": "VariableDeclaration",
                  "scope": 1316,
                  "src": "5733:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5733:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5718:29:3"
            },
            "scope": 1317,
            "src": "5627:220:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1318,
        "src": "763:5086:3"
      }
    ],
    "src": "0:5850:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.3+commit.10d17f24.Emscripten.clang"
  },
  "networks": {
    "1614024380757": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xD27c159a5b06AAB67Cd32dc896b14084278d2d69",
      "transactionHash": "0xdde8dffe12d7fd5279d4a8da5b64dd217202ba01dbf53f6615aabcaf6adb06e5"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-02-25T00:58:00.193Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "_Burn(address,uint256)": {
        "details": "this function will fail if called by anyone other than the owner",
        "params": {
          "_amount": "is the amount of tokens being burnt*",
          "_from": "is the address the tokens are being burnt from"
        }
      },
      "_Mint(address,uint256)": {
        "details": "this function will fail if called by anyone who isnt the contract owner",
        "params": {
          "_amount": "is the amount of tokens being minted*",
          "_to": "is the address tokens are being minted to"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRelativePosition(address)": {
        "details": "this is needed to ensure on person cant vote multiple times by transfering his rep to seperate accounts",
        "params": {
          "_account": "is the account whos position is being calculated*"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(address)": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "initialize(string,string,bool,bool,address,uint256)": {
        "details": "this function mints one token to the DAO creator so that they can install neurons on the DAO after its creationif _DAOcreator is equal to the DAO(the msg.sender) and the token is not being used as a rep token then the constructor will not mint a first token",
        "params": {
          "_DAOcreator": "is the address of the person who created the DAO that is creating this token.",
          "_isRep": "is a bool representing whether or not this token will be used as a DAO repToken",
          "_isTransferable": "is a bool representing whether of not this token is transferable",
          "_maxSupply": "is the maximum supply this synaps will be capped at(uncapped == 0)*",
          "_tokenName": "is the name of the token",
          "_tokenSym": "is the symbol of the token"
        }
      },
      "initialize(string,string,uint8)": {
        "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "this override function is used to check if a token allows for transfers",
        "params": {
          "amount": "is the amount of token being transfered",
          "recipient": "is the address the tokens are being transfered to"
        },
        "return": "is a bool representing whether or not the transfer was successful*"
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "_Burn(address,uint256)": {
        "notice": "_Burn allows the owner of this token contract to burn tokens from an account"
      },
      "_Mint(address,uint256)": {
        "notice": "_Mint allows the owner of this token contract to mint new tokens"
      },
      "getRelativePosition(address)": {
        "notice": "getRelativePosition is used by the DAO to determine the voting status of an account in DAO's where the rep is transferable."
      },
      "initialize(string,string,bool,bool,address,uint256)": {
        "notice": "the constructor function is fired only once during contract creation and is used to set up the ZDAO rep token"
      },
      "transfer(address,uint256)": {
        "notice": "transfer is an override function for the standard ERC20 transfer function"
      }
    },
    "notice": "The Synaps is designed to be a flexible ERC20 token that can be used by a ZDAO in multiple ways.*"
  }
}