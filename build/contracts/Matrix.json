{
  "contractName": "Matrix",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_NeuronNames",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "_initialCoreNeurons",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_cortexAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_cotexName",
          "type": "string"
        }
      ],
      "name": "CortexCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_Cortex",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_neuronName",
          "type": "string"
        }
      ],
      "name": "_neuroGensis",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_NeuronName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_neuronFactoryAddress",
          "type": "address"
        }
      ],
      "name": "addCoreNueron",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_NeuronName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_neuronFactoryAddress",
          "type": "address"
        }
      ],
      "name": "addPeripheralNueron",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "coreNeurons",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "cortexTracker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenSym",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isTransferable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isRep",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_Creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxSupply",
          "type": "uint256"
        }
      ],
      "name": "createSynaps",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isNeuron",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "nameTaken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "neuralMapFromCortex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "neuralMapToCortex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "neuralNetwork",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "peripheralNeurons",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_CortexName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenSym",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_synaps",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isTransferable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_maxSupply",
          "type": "uint256"
        }
      ],
      "name": "createCortex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_Name",
          "type": "string"
        }
      ],
      "name": "retrieveCortex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_Name",
          "type": "string"
        }
      ],
      "name": "cortexNameTaken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_NeuronNames\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_initialCoreNeurons\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_cortexAdd\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_cotexName\",\"type\":\"string\"}],\"name\":\"CortexCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Cortex\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_neuronName\",\"type\":\"string\"}],\"name\":\"_neuroGensis\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_NeuronName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_neuronFactoryAddress\",\"type\":\"address\"}],\"name\":\"addCoreNueron\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_NeuronName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_neuronFactoryAddress\",\"type\":\"address\"}],\"name\":\"addPeripheralNueron\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"coreNeurons\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_Name\",\"type\":\"string\"}],\"name\":\"cortexNameTaken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"cortexTracker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_CortexName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSym\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_synaps\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isTransferable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"name\":\"createCortex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSym\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isTransferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isRep\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_Creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"name\":\"createSynaps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isNeuron\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nameTaken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"neuralMapFromCortex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"neuralMapToCortex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"neuralNetwork\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"peripheralNeurons\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_Name\",\"type\":\"string\"}],\"name\":\"retrieveCortex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_neuroGensis(address,string)\":{\"params\":{\"_Cortex\":\"is the address of the cortex who is generating a neuron\",\"_neuronName\":\"is the name of the neuron being generated*\"}},\"addCoreNueron(string,address)\":{\"params\":{\"_NeuronName\":\"is the name of the neuron being added\",\"_neuronFactoryAddress\":\"is the factory address for the neuron being added*\"}},\"addPeripheralNueron(string,address)\":{\"params\":{\"_NeuronName\":\"is the name of the neuron being added\",\"_neuronFactoryAddress\":\"is the factory address for the neuron being added*\"}},\"constructor\":{\"params\":{\"_NeuronNames\":\"is an array of all availible core neuron names availible at deployment time\",\"_initialCoreNeurons\":\"is an array of all availible core neuron addresses availible at deployment time*\"}},\"cortexNameTaken(string)\":{\"details\":\"this is a view only function for front end use\",\"params\":{\"_Name\":\"is the proposed name of a Cortex\"},\"returns\":{\"_0\":\"a bool(true/false) for whether or not a Cortex with the input name exists*\"}},\"createCortex(string,string,string,address,bool,uint256)\":{\"details\":\"this function can create a rep token for the new DAO OR use an existing ERC20 token\",\"params\":{\"_CortexName\":\"is the name of the DAO being created\",\"_isTransferable\":\"is a bool representing whether or not the rep token is transferable*\",\"_synaps\":\"is the address of an existing ERC20 token that can represent the DAO's rep (this would be set to 0x0 if not applicapble)\",\"_tokenName\":\"is the name of the DAO's rep token(leave blank if using an existing token)\",\"_tokenSym\":\"is the symbol of the DAO's rep token(leave blank if using an existing token)\"}},\"createSynaps(string,string,bool,bool,address,uint256)\":{\"params\":{\"_Creator\":\"is the address of the person who created the synaps token.\",\"_maxSupply\":\"is the maximum supply this synaps will be capped at(uncapped == 0)*\",\"_tokenName\":\"is the name of the token\",\"_tokenSym\":\"is the symbol of the token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"retrieveCortex(string)\":{\"details\":\"this is a view only function for front end use\",\"params\":{\"_Name\":\"is the name of the Cortex who's address is being retrieved\"},\"returns\":{\"_0\":\"the address of the Cortex*\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"_neuroGensis(address,string)\":{\"notice\":\"_neuroGensis is used by a cortex to generate a new neural instance of a neuron\"},\"addCoreNueron(string,address)\":{\"notice\":\"addCoreNueron allows the owner of this contract to add a core neuron to the matrix\"},\"addPeripheralNueron(string,address)\":{\"notice\":\"addPeripheralNueron allows the owner of this contract to add a peripheral neuron to the matrix\"},\"constructor\":\"the constructor is fired only once during contract creation and is used to set up variables in the contract\",\"cortexNameTaken(string)\":{\"notice\":\"cortexNameTaken is used to determine if a name for a Cortex is currently in use\"},\"createCortex(string,string,string,address,bool,uint256)\":{\"notice\":\"createCortex is a public function that allows a user to create their own zDAO\"},\"createSynaps(string,string,bool,bool,address,uint256)\":{\"notice\":\"the createSynaps function allows a user to create their own synaps token\"},\"retrieveCortex(string)\":{\"notice\":\"retrieveCortex is used to retrieve a Cortex's address by its name\"}},\"notice\":\"The Matrix contract is designed to produce and track individual ZDAO contracts*\"}},\"settings\":{\"compilationTarget\":{\"/home/stan36/repos/zer0/ZDAO/contracts/Matrix/Matrix.sol\":\"Matrix\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/home/stan36/repos/zer0/ZDAO/contracts/CoreNuerons/VotingApp.sol\":{\"keccak256\":\"0xae314f226eed4ba315ee059eaa15f28b949d67dc6b88068937fd2266b29fcf87\",\"urls\":[\"bzz-raw://e52622bdb8c3908e78cb338fbcbf472b9fd58b0483d6aea21836fcdc229440d0\",\"dweb:/ipfs/QmeM2CPQpouhmfCjjMQtbEcrJKv8J2viNCK7or89AdhJRq\"]},\"/home/stan36/repos/zer0/ZDAO/contracts/Cortex/Cortex.sol\":{\"keccak256\":\"0x48ad8668fdb61294e70910fd761d55e4747cd118c4507be3369a4c2a79778315\",\"urls\":[\"bzz-raw://926268d06743bec6ba86813423d28273ef64ecc10772e9cc59230e2a3f3651cb\",\"dweb:/ipfs/QmUPCMNmSjj1rZUR9weLT3yCf2YAgRKqUiTbv39k1H4gLq\"]},\"/home/stan36/repos/zer0/ZDAO/contracts/Cortex/Synaps.sol\":{\"keccak256\":\"0x405bee0171f272c22fba47037696c0e2e5d56886ac8ccb997fe22e4a12b4b907\",\"urls\":[\"bzz-raw://63e44a3aa004d043689968eee399fb84190b36f4130471880bbdde39741f9474\",\"dweb:/ipfs/QmPMRJrvJyNEsvtPsvPkC6k95zfhkzyrejHKdY4AVgLL1P\"]},\"/home/stan36/repos/zer0/ZDAO/contracts/Interfaces/CortexI.sol\":{\"keccak256\":\"0x15f1fdad89c29abe0ed29c6e0c7ec2950e0a3251604f480e2b8e74ad10ee5c32\",\"urls\":[\"bzz-raw://b3435a64986cd52b9b0251a311662ff43023432692df739cab6819ba73473ef4\",\"dweb:/ipfs/QmR9Nkgdi3trgzEi1iVQWv38ZahUezFaFfQw7Sn1ydey8r\"]},\"/home/stan36/repos/zer0/ZDAO/contracts/Interfaces/NeuronFactoryI.sol\":{\"keccak256\":\"0x93ebf0f7a12398c87cd9ef99a64c551d372e7238d60a75abaa12225daed765e2\",\"urls\":[\"bzz-raw://b21fdf5eb62f8520fdcbf9fa4723df4cc239b69656fe0b4c578459e6e2a9a927\",\"dweb:/ipfs/QmeTyBpynxfY9sUXisUzwveE6y6habTbZvcJSvL4ydLGQa\"]},\"/home/stan36/repos/zer0/ZDAO/contracts/Interfaces/NeuronI.sol\":{\"keccak256\":\"0xf5c6138dc80bc59588aff7aa46170b41ba27fe25ebe1335b7bfc5f1cb0718cb5\",\"urls\":[\"bzz-raw://d09a79b2fdb33e5e33786d5c2d764eafb01ce595cf75b942c65f8730b89574d2\",\"dweb:/ipfs/QmUipde6GsJvcE5HL9kcMXTv7M7iLbSN4pKX3mvnP6GYpn\"]},\"/home/stan36/repos/zer0/ZDAO/contracts/Matrix/Hippocampus.sol\":{\"keccak256\":\"0x02af39356718a8116743ec91d637afe0b96e8d06c424a2b549b2bdb377e4102f\",\"urls\":[\"bzz-raw://e162a4213f0f89c8cb9cf5891b123884ff2cafdbf72bdf916604ddbeadc49252\",\"dweb:/ipfs/QmWBpywa1cakBCNPsnJSWxTWZffuAYtYWbzjKzjCDjdKGJ\"]},\"/home/stan36/repos/zer0/ZDAO/contracts/Matrix/Matrix.sol\":{\"keccak256\":\"0x731905d5ed14b720d4a2a6fd18fcdd83b2d08332e135298d9a74f626ff2030cd\",\"urls\":[\"bzz-raw://e0781848dab3bd6b745bec4bd4a5a74c16848a3b94e7e64d2cfb38409361276b\",\"dweb:/ipfs/QmXLiHDz9dfGmqPGWMz7Z6xCVExD7TKzoGLcdFrzXVYYBc\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538\",\"urls\":[\"bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca\",\"dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162005f3738038062005f3783398101604081905262000034916200027b565b6000620000496001600160e01b03620001ea16565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508051825114620000c05760405162461bcd60e51b8152600401620000b79062000394565b60405180910390fd5b60005b8151811015620001e157818181518110620000da57fe5b60200260200101516001848381518110620000f157fe5b602002602001015160405162000108919062000376565b908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506001600260008484815181106200014d57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555060058282815181106200019b57fe5b60209081029190910181015182546001808201855560009485529290932090920180546001600160a01b0319166001600160a01b039093169290921790915501620000c3565b50505062000469565b3390565b600082601f830112620001ff578081fd5b8151620002166200021082620003f2565b620003cb565b8181529150602080830190848101818402860182018710156200023857600080fd5b6000805b858110156200026f5782516001600160a01b03811681146200025c578283fd5b855293830193918301916001016200023c565b50505050505092915050565b60008060408084860312156200028f578283fd5b83516001600160401b0380821115620002a6578485fd5b81860187601f820112620002b8578586fd5b80519250620002cb6200021084620003f2565b83815260208082019190838101895b878110156200034357815186018d603f820112620002f6578b8cfd5b8381015162000309620002108262000412565b8181528f8c8385010111156200031d578d8efd5b6200032e828783018e860162000436565b875250509382019390820190600101620002da565b505089015190975094505050808311156200035c578384fd5b50506200036c85828601620001ee565b9150509250929050565b600082516200038a81846020870162000436565b9190910192915050565b6020808252601c908201527f4572726f723a204172726179204c656e677468204d69736d6174636800000000604082015260600190565b6040518181016001600160401b0381118282101715620003ea57600080fd5b604052919050565b60006001600160401b0382111562000408578081fd5b5060209081020190565b60006001600160401b0382111562000428578081fd5b50601f01601f191660200190565b60005b838110156200045357818101518382015260200162000439565b8381111562000463576000848401525b50505050565b615abe80620004796000396000f3fe60806040523480156200001157600080fd5b50600436106200010c5760003560e01c806361a6b1f9116200009f57806361a6b1f914620001fa578063715018a614620002115780638da5cb5b146200021b57806391fc437e1462000225578063a26d91df146200024b578063bdafc7881462000262578063c50e154c1462000279578063d0a087c81462000290578063f2fde38b14620002a7576200010c565b8063087c485514620001115780632312898814620001405780633b9a0bdd14620001595780633e60f1c914620001705780633f21672e14620001875780634e09a6ed146200019e57806352ba717814620001b55780635d70bbe114620001cc5780636161e0ad14620001e3575b600080fd5b620001286200012236600462000c11565b620002be565b60405162000137919062000f2f565b60405180910390f35b620001576200015136600462000d17565b620002d9565b005b620001286200016a36600462000eca565b62000400565b620001286200018136600462000d6d565b62000428565b620001286200019836600462000cd8565b6200047a565b62000128620001af36600462000c56565b620004a0565b62000128620001c636600462000caa565b620005a5565b62000128620001dd36600462000cd8565b620005db565b62000157620001f436600462000d17565b62000601565b620001286200020b36600462000eca565b620006e5565b62000157620006f3565b6200012862000777565b6200023c6200023636600462000cd8565b62000786565b60405162000137919062000f69565b620001286200025c36600462000cd8565b620007a6565b6200023c6200027336600462000c11565b620007da565b620001576200028a36600462000e1d565b620007ef565b6200023c620002a136600462000cd8565b62000a83565b62000157620002b836600462000c11565b62000ab1565b6003602052600090815260409020546001600160a01b031681565b620002e362000b6f565b6000546001600160a01b039081169116146200031c5760405162461bcd60e51b81526004016200031390620010b2565b60405180910390fd5b6001826040516200032e919062000f11565b908152604051908190036020019020546001600160a01b031615620003675760405162461bcd60e51b8152600401620003139062001080565b806001836040516200037a919062000f11565b908152604080516020928190038301902080546001600160a01b03199081166001600160a01b03958616179091559390921660008181526002909252918120805460ff191660019081179091556005805491820181559091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001805490921617905550565b600681815481106200040e57fe5b6000918252602090912001546001600160a01b0316905081565b6000808787878787876040516200043f9062000b73565b620004509695949392919062000f74565b604051809103906000f0801580156200046d573d6000803e3d6000fd5b5098975050505050505050565b80516020818301810180516007825292820191909301209152546001600160a01b031681565b600080600183604051620004b5919062000f11565b90815260405190819003602001812054637722250960e01b82526001600160a01b031691506000908290637722250990620004f590889060040162000f2f565b602060405180830381600087803b1580156200051057600080fd5b505af115801562000525573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200054b919062000c37565b6001600160a01b0380821660008181526003602090815260408083208054958c166001600160a01b031996871681179091558352600482528220805460018101825590835291200180549092161790559250505092915050565b60046020528160005260406000208181548110620005bf57fe5b6000918252602090912001546001600160a01b03169150829050565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b60018260405162000613919062000f11565b908152604051908190036020019020546001600160a01b0316156200064c5760405162461bcd60e51b8152600401620003139062001080565b806001836040516200065f919062000f11565b908152604080516020928190038301902080546001600160a01b03199081166001600160a01b03958616179091559390921660008181526002909252918120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805490921617905550565b600581815481106200040e57fe5b620006fd62000b6f565b6000546001600160a01b039081169116146200072d5760405162461bcd60e51b81526004016200031390620010b2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b805160208183018101805160088252928201919093012091525460ff1681565b6000600782604051620007ba919062000f11565b908152604051908190036020019020546001600160a01b03169050919050565b60026020526000908152604090205460ff1681565b60088660405162000801919062000f11565b9081526040519081900360200190205460ff16151560011415620008395760405162461bcd60e51b81526004016200031390620010e7565b60006001600160a01b0384166200092e578686866000338787604051620008609062000b81565b62000872979695949392919062000fcc565b604051809103906000f0801580156200088f573d6000803e3d6000fd5b50905080600788604051620008a5919062000f11565b90815260405190819003602001812080546001600160a01b039384166001600160a01b031990911617905563f2fde38b60e01b81529082169063f2fde38b90620008f490339060040162000f2f565b600060405180830381600087803b1580156200090f57600080fd5b505af115801562000924573d6000803e3d6000fd5b5050505062000a0c565b86868686338787604051620009439062000b81565b62000955979695949392919062000fcc565b604051809103906000f08015801562000972573d6000803e3d6000fd5b5090508060078860405162000988919062000f11565b90815260405190819003602001812080546001600160a01b039384166001600160a01b031990911617905563f2fde38b60e01b81529082169063f2fde38b90620009d790339060040162000f2f565b600060405180830381600087803b158015620009f257600080fd5b505af115801562000a07573d6000803e3d6000fd5b505050505b600160088860405162000a20919062000f11565b908152604051908190036020018120805492151560ff19909316929092179091557f6361531792c6d1906d164766ab4d654d52625a08c50ff690efa5935b8de2d0599062000a729083908a9062000f43565b60405180910390a150505050505050565b600060088260405162000a97919062000f11565b9081526040519081900360200190205460ff169050919050565b62000abb62000b6f565b6000546001600160a01b0390811691161462000aeb5760405162461bcd60e51b81526004016200031390620010b2565b6001600160a01b03811662000b145760405162461bcd60e51b815260040162000313906200103a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6117dd806200118d83390190565b61311f806200296a83390190565b600082601f83011262000ba0578081fd5b813567ffffffffffffffff8082111562000bb8578283fd5b604051601f8301601f19168101602001828111828210171562000bd9578485fd5b60405282815292508284830160200186101562000bf557600080fd5b8260208601602083013760006020848301015250505092915050565b60006020828403121562000c23578081fd5b813562000c308162001164565b9392505050565b60006020828403121562000c49578081fd5b815162000c308162001164565b6000806040838503121562000c69578081fd5b823562000c768162001164565b9150602083013567ffffffffffffffff81111562000c92578182fd5b62000ca08582860162000b8f565b9150509250929050565b6000806040838503121562000cbd578182fd5b823562000cca8162001164565b946020939093013593505050565b60006020828403121562000cea578081fd5b813567ffffffffffffffff81111562000d01578182fd5b62000d0f8482850162000b8f565b949350505050565b6000806040838503121562000d2a578182fd5b823567ffffffffffffffff81111562000d41578283fd5b62000d4f8582860162000b8f565b925050602083013562000d628162001164565b809150509250929050565b60008060008060008060c0878903121562000d86578182fd5b863567ffffffffffffffff8082111562000d9e578384fd5b62000dac8a838b0162000b8f565b9750602089013591508082111562000dc2578384fd5b5062000dd189828a0162000b8f565b955050604087013562000de4816200117d565b9350606087013562000df6816200117d565b9250608087013562000e088162001164565b8092505060a087013590509295509295509295565b60008060008060008060c0878903121562000e36578182fd5b863567ffffffffffffffff8082111562000e4e578384fd5b62000e5c8a838b0162000b8f565b9750602089013591508082111562000e72578384fd5b62000e808a838b0162000b8f565b9650604089013591508082111562000e96578384fd5b5062000ea589828a0162000b8f565b945050606087013562000eb88162001164565b9250608087013562000e08816200117d565b60006020828403121562000edc578081fd5b5035919050565b6000815180845262000efd81602086016020860162001131565b601f01601f19169290920160200192915050565b6000825162000f2581846020870162001131565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b038316815260406020820181905260009062000d0f9083018462000ee3565b901515815260200190565b600060c0825262000f8960c083018962000ee3565b828103602084015262000f9d818962000ee3565b9615156040840152505092151560608401526001600160a01b0391909116608083015260a09091015292915050565b600060e0825262000fe160e083018a62000ee3565b828103602084015262000ff5818a62000ee3565b838103604085015262001009818a62000ee3565b6001600160a01b039889166060860152969097166080840152505091151560a083015260c090910152949350505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526018908201527722b93937b91d103732bab937b7103730b6b2903a30b5b2b760411b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602a908201527f4e616d65204572726f723a20546869732044414f206e616d6520697320616c7260408201526932b0b23c903a30b5b2b760b11b606082015260800190565b60005b838110156200114e57818101518382015260200162001134565b838111156200115e576000848401525b50505050565b6001600160a01b03811681146200117a57600080fd5b50565b80151581146200117a57600080fdfe60806040523480156200001157600080fd5b50604051620017dd380380620017dd833981810160405260c08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151919450925085856000620001ce6001600160e01b03620002c216565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35081516200022d906004906020850190620004b4565b50805162000243906005906020840190620004b4565b505060068054601260ff1991821617909155600880549091168615151761ff001916610100861515908102919091179091556007839055600114159050620002b657620002a282670de0b6b3a76400006001600160e01b03620002c716565b620002b6826001600160e01b03620003e316565b50505050505062000556565b335b90565b6001600160a01b03821662000323576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200033a600083836001600160e01b036200043216565b62000356816003546200043760201b62000dc91790919060201c565b6003556001600160a01b0382166000908152600160209081526040909120546200038b91839062000dc962000437821b17901c565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116600090815260096020526040812042905562000412826001600160e01b036200049916565b6001600160a01b039092166000908152600a602052604090209190915550565b505050565b60008282018381101562000492576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b031660009081526001602052604090205490565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004f757805160ff191683800117855562000527565b8280016001018555821562000527579182015b82811115620005275782518255916020019190600101906200050a565b506200053592915062000539565b5090565b620002c491905b8082111562000535576000815560010162000540565b61127780620005666000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806384612324116100b857806396615aa31161007c57806396615aa3146103c1578063a457c2d7146103ed578063a9059cbb14610419578063d5abeb0114610445578063dd62ed3e1461044d578063f2fde38b1461047b57610142565b806384612324146103285780638da5cb5b1461034e5780638f50c3a21461037257806392ff0d31146103b157806395d89b41146103b957610142565b8063395093511161010a57806339509351146102725780636fcc7d571461029e57806370a08231146102c4578063715018a6146102ea578063782f085d146102f45780637d21ce4d146102fc57610142565b806306fdde0314610147578063095ea7b3146101c457806318160ddd1461020457806323b872dd1461021e578063313ce56714610254575b600080fd5b61014f6104a1565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360408110156101da57600080fd5b506001600160a01b038135169060200135610537565b604080519115158252519081900360200190f35b61020c610555565b60408051918252519081900360200190f35b6101f06004803603606081101561023457600080fd5b506001600160a01b0381358116916020810135909116906040013561055b565b61025c6105e8565b6040805160ff9092168252519081900360200190f35b6101f06004803603604081101561028857600080fd5b506001600160a01b0381351690602001356105f1565b61020c600480360360208110156102b457600080fd5b50356001600160a01b0316610645565b61020c600480360360208110156102da57600080fd5b50356001600160a01b0316610657565b6102f2610672565b005b6101f0610714565b6102f26004803603604081101561031257600080fd5b506001600160a01b038135169060200135610722565b61020c6004803603602081101561033e57600080fd5b50356001600160a01b0316610807565b610356610819565b604080516001600160a01b039092168252519081900360200190f35b6103986004803603602081101561038857600080fd5b50356001600160a01b0316610828565b6040805192835260208301919091528051918290030190f35b6101f0610850565b61014f610859565b6102f2600480360360408110156103d757600080fd5b506001600160a01b0381351690602001356108ba565b6101f06004803603604081101561040357600080fd5b506001600160a01b038135169060200135610925565b6101f06004803603604081101561042f57600080fd5b506001600160a01b038135169060200135610993565b61020c6109c2565b61020c6004803603604081101561046357600080fd5b506001600160a01b03813581169160200135166109c8565b6102f26004803603602081101561049157600080fd5b50356001600160a01b03166109f3565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561052d5780601f106105025761010080835404028352916020019161052d565b820191906000526020600020905b81548152906001019060200180831161051057829003601f168201915b5050505050905090565b600061054b610544610aeb565b8484610aef565b5060015b92915050565b60035490565b6000610568848484610bdb565b6105de84610574610aeb565b6105d98560405180606001604052806028815260200161114b602891396001600160a01b038a166000908152600260205260408120906105b2610aeb565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610d3216565b610aef565b5060019392505050565b60065460ff1690565b600061054b6105fe610aeb565b846105d9856002600061060f610aeb565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610dc916565b600a6020526000908152604090205481565b6001600160a01b031660009081526001602052604090205490565b61067a610aeb565b6000546001600160a01b039081169116146106ca576040805162461bcd60e51b81526020600482018190526024820152600080516020611173833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600854610100900460ff1681565b61072a610aeb565b6000546001600160a01b0390811691161461077a576040805162461bcd60e51b81526020600482018190526024820152600080516020611173833981519152604482015290519081900360640190fd5b600754156107f05760075461079d82610791610555565b9063ffffffff610dc916565b11156107f0576040805162461bcd60e51b815260206004820152601e60248201527f4d617820746f74616c20737570706c79206c696d697420726561636865640000604482015290519081900360640190fd5b6107f982610e2a565b6108038282610e6e565b5050565b60096020526000908152604090205481565b6000546001600160a01b031690565b6001600160a01b0316600090815260096020908152604080832054600a909252909120549091565b60085460ff1681565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561052d5780601f106105025761010080835404028352916020019161052d565b6108c2610aeb565b6000546001600160a01b03908116911614610912576040805162461bcd60e51b81526020600482018190526024820152600080516020611173833981519152604482015290519081900360640190fd5b61091b82610e2a565b6108038282610f5a565b600061054b610932610aeb565b846105d98560405180606001604052806025815260200161121d602591396002600061095c610aeb565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610d3216565b60085460009060ff166109a85750600061054f565b6109b183610e2a565b6109bb8383610993565b5092915050565b60075481565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6109fb610aeb565b6000546001600160a01b03908116911614610a4b576040805162461bcd60e51b81526020600482018190526024820152600080516020611173833981519152604482015290519081900360640190fd5b6001600160a01b038116610a905760405162461bcd60e51b81526004018080602001828103825260268152602001806110dd6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6001600160a01b038316610b345760405162461bcd60e51b81526004018080602001828103825260248152602001806111f96024913960400191505060405180910390fd5b6001600160a01b038216610b795760405162461bcd60e51b81526004018080602001828103825260228152602001806111036022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610c205760405162461bcd60e51b81526004018080602001828103825260258152602001806111d46025913960400191505060405180910390fd5b6001600160a01b038216610c655760405162461bcd60e51b81526004018080602001828103825260238152602001806110986023913960400191505060405180910390fd5b610c70838383611050565b610cb381604051806060016040528060268152602001611125602691396001600160a01b038616600090815260016020526040902054919063ffffffff610d3216565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610ce8908263ffffffff610dc916565b6001600160a01b03808416600081815260016020908152604091829020949094558051858152905191939287169260008051602061119383398151915292918290030190a3505050565b60008184841115610dc15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d86578181015183820152602001610d6e565b50505050905090810190601f168015610db35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610e23576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b0381166000908152600960205260408120429055610e4e82610657565b6001600160a01b039092166000908152600a602052604090209190915550565b6001600160a01b038216610ec9576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ed560008383611050565b600354610ee8908263ffffffff610dc916565b6003556001600160a01b038216600090815260016020526040902054610f14908263ffffffff610dc916565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391926000805160206111938339815191529281900390910190a35050565b6001600160a01b038216610f9f5760405162461bcd60e51b81526004018080602001828103825260218152602001806111b36021913960400191505060405180910390fd5b610fab82600083611050565b610fee816040518060600160405280602281526020016110bb602291396001600160a01b038516600090815260016020526040902054919063ffffffff610d3216565b6001600160a01b03831660009081526001602052604090205560035461101a908263ffffffff61105516565b6003556040805182815290516000916001600160a01b038516916000805160206111938339815191529181900360200190a35050565b505050565b6000610e2383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610d3256fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212202e863fc31b0f8a3369a7ed1a71660fc5f0a9908d30daa44f33ea22e116e59b8864736f6c6343000606003360806040523480156200001157600080fd5b506040516200311f3803806200311f833981810160405260e08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084640100000000821115620001bc57600080fd5b908301906020820185811115620001d257600080fd5b8251640100000000811182820188101715620001ed57600080fd5b82525081516020918201929091019080838360005b838110156200021c57818101518382015260200162000202565b50505050905090810190601f1680156200024a5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060830151608090930151919450925060006200027e6001600160e01b03620006ac16565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508651620002dd9060019060208a0190620006b1565b50600280546001600160a01b031916331790556001600160a01b038416620004b357600254604051633e60f1c960e01b815283151560448201526001606482018190526001600160a01b03868116608484015260a4830185905260c0600484019081528a5160c48501528a519190941693633e60f1c9938b938b93899391928b928a9290918291602482019160e4019060208b019080838360005b838110156200039257818101518382015260200162000378565b50505050905090810190601f168015620003c05780820380516001836020036101000a031916815260200191505b5083810382528851815288516020918201918a019080838360005b83811015620003f5578181015183820152602001620003db565b50505050905090810190601f168015620004235780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156200044957600080fd5b505af11580156200045e573d6000803e3d6000fd5b505050506040513d60208110156200047557600080fd5b5051600080526004602052600080516020620030ff83398151915280546001600160a01b0319166001600160a01b03909216919091179055620004e6565b600080526004602052600080516020620030ff83398151915280546001600160a01b0319166001600160a01b0386161790555b6003805460010190556040516000903090620005029062000736565b6001600160a01b03909116815260405190819003602001906000f08015801562000530573d6000803e3d6000fd5b50600080805260046020819052600080516020620030ff83398151915254604080516347c7f8db60e11b81526001600160a01b03928316938101939093526032602484015262093a806044840152871515606484015251939450841692638f8ff1b69260848084019391929182900301818387803b158015620005b257600080fd5b505af1158015620005c7573d6000803e3d6000fd5b50505050806001600160a01b031663185ed8316040518163ffffffff1660e01b815260040160206040518083038186803b1580156200060557600080fd5b505afa1580156200061a573d6000803e3d6000fd5b505050506040513d60208110156200063157600080fd5b50516001600160a01b03919091166000818152600560205260408120805460ff1916931515939093179092556006805460018101825592527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0319169091179055506200076195505050505050565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006f457805160ff191683800117855562000724565b8280016001018555821562000724579182015b828111156200072457825182559160200191906001019062000707565b506200073292915062000744565b5090565b61178c806200197383390190565b620006ae91905b808211156200073257600081556001016200074b565b61120280620007716000396000f3fe6080604052600436106100cc5760003560e01c80638da5cb5b1161007a5780638da5cb5b146104a857806392bd66c0146104bd578063b9d49ca614610583578063c00c89aa146105ca578063ca1a4a95146105f4578063e71bdf411461061e578063f2fde38b14610651578063fc68a01b14610684576100d3565b806335db86a7146100d857806348976936146102485780634a8a300a146102d257806363fd71cf1461041257806367e7646f14610427578063715018a61461045a5780637b1a49091461046f576100d3565b366100d357005b600080fd5b3480156100e457600080fd5b5061022c600480360360c08110156100fb57600080fd5b810190602081018135600160201b81111561011557600080fd5b82018360208201111561012757600080fd5b803590602001918460018302840111600160201b8311171561014857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561019a57600080fd5b8201836020820111156101ac57600080fd5b803590602001918460018302840111600160201b831117156101cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b038335169350505060208101351515906040810135151590606001356106ab565b604080516001600160a01b039092168252519081900360200190f35b34801561025457600080fd5b5061025d6108bf565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029757818101518382015260200161027f565b50505050905090810190601f1680156102c45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102de57600080fd5b50610410600480360360608110156102f557600080fd5b810190602081018135600160201b81111561030f57600080fd5b82018360208201111561032157600080fd5b803590602001918460018302840111600160201b8311171561034257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435959094909350604081019250602001359050600160201b81111561039c57600080fd5b8201836020820111156103ae57600080fd5b803590602001918460018302840111600160201b831117156103cf57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061094c945050505050565b005b34801561041e57600080fd5b5061022c610c65565b34801561043357600080fd5b506104106004803603602081101561044a57600080fd5b50356001600160a01b0316610c74565b34801561046657600080fd5b50610410610ced565b34801561047b57600080fd5b506104106004803603604081101561049257600080fd5b506001600160a01b038135169060200135610d8f565b3480156104b457600080fd5b5061022c610e22565b3480156104c957600080fd5b50610410600480360360608110156104e057600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561050f57600080fd5b82018360208201111561052157600080fd5b803590602001918460018302840111600160201b8311171561054257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e31945050505050565b34801561058f57600080fd5b506105b6600480360360208110156105a657600080fd5b50356001600160a01b0316610f88565b604080519115158252519081900360200190f35b3480156105d657600080fd5b5061022c600480360360208110156105ed57600080fd5b5035610f9d565b34801561060057600080fd5b5061022c6004803603602081101561061757600080fd5b5035610fc4565b34801561062a57600080fd5b506104106004803603602081101561064157600080fd5b50356001600160a01b0316610fdf565b34801561065d57600080fd5b506104106004803603602081101561067457600080fd5b50356001600160a01b031661105b565b34801561069057600080fd5b50610699611153565b60408051918252519081900360200190f35b60006106b5611159565b6000546001600160a01b03908116911614610705576040805162461bcd60e51b815260206004820181905260248201526000805160206111ad833981519152604482015290519081900360640190fd5b600254604051633e60f1c960e01b8152851515604482015284151560648201526001600160a01b03878116608483015260a4820185905260c0600483019081528a5160c48401528a519190931692633e60f1c9928b928b928a928a928d928b9290918291602481019160e49091019060208b019080838360005b8381101561079757818101518382015260200161077f565b50505050905090810190601f1680156107c45780820380516001836020036101000a031916815260200191505b5083810382528851815288516020918201918a019080838360005b838110156107f75781810151838201526020016107df565b50505050905090810190601f1680156108245780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561084957600080fd5b505af115801561085d573d6000803e3d6000fd5b505050506040513d602081101561087357600080fd5b50516003805460009081526004602052604080822080546001600160a01b0319166001600160a01b03958616179055825480835291205460019190910190915516979650505050505050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109445780601f1061091957610100808354040283529160200191610944565b820191906000526020600020905b81548152906001019060200180831161092757829003601f168201915b505050505081565b610954611159565b6000546001600160a01b039081169116146109a4576040805162461bcd60e51b815260206004820181905260248201526000805160206111ad833981519152604482015290519081900360640190fd5b60025460408051634e09a6ed60e01b81523060048201818152602483019384528751604484015287516000956001600160a01b031694634e09a6ed948a939260649091019060208501908083838c5b83811015610a0b5781810151838201526020016109f3565b50505050905090810190601f168015610a385780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015610a5857600080fd5b505af1158015610a6c573d6000803e3d6000fd5b505050506040513d6020811015610a8257600080fd5b5051604051835191925082916000916060916001600160a01b038516918891889190819060208401908083835b60208310610ace5780518252601f199092019160209182019101610aaf565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b509150915081610b8c576040805162461bcd60e51b815260206004820152601c60248201527f6661696c65642063616c6c696e6720636f6e6e6563744e6575726f6e00000000604482015290519081900360640190fd5b836001600160a01b031663185ed8316040518163ffffffff1660e01b815260040160206040518083038186803b158015610bc557600080fd5b505afa158015610bd9573d6000803e3d6000fd5b505050506040513d6020811015610bef57600080fd5b50516001600160a01b03949094166000818152600560205260408120805460ff1916961515969096179095556006805460018101825595527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90940180546001600160a01b031916909417909355505050505050565b6002546001600160a01b031681565b610c7c611159565b6000546001600160a01b03908116911614610ccc576040805162461bcd60e51b815260206004820181905260248201526000805160206111ad833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600560205260409020805460ff19169055565b610cf5611159565b6000546001600160a01b03908116911614610d45576040805162461bcd60e51b815260206004820181905260248201526000805160206111ad833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610d97611159565b6000546001600160a01b03908116911614610de7576040805162461bcd60e51b815260206004820181905260248201526000805160206111ad833981519152604482015290519081900360640190fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610e1d573d6000803e3d6000fd5b505050565b6000546001600160a01b031690565b3360009081526005602052604090205460ff161515600114610e845760405162461bcd60e51b81526004018080602001828103825260298152602001806111846029913960400191505060405180910390fd5b60006060846001600160a01b031684846040518082805190602001908083835b60208310610ec35780518252601f199092019160209182019101610ea4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610f25576040519150601f19603f3d011682016040523d82523d6000602084013e610f2a565b606091505b509150915081610f81576040805162461bcd60e51b815260206004820152601b60248201527f64656c656761746546756e6374696f6e43616c6c204661696c65640000000000604482015290519081900360640190fd5b5050505050565b60056020526000908152604090205460ff1681565b60068181548110610faa57fe5b6000918252602090912001546001600160a01b0316905081565b6004602052600090815260409020546001600160a01b031681565b610fe7611159565b6000546001600160a01b03908116911614611037576040805162461bcd60e51b815260206004820181905260248201526000805160206111ad833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b611063611159565b6000546001600160a01b039081169116146110b3576040805162461bcd60e51b815260206004820181905260248201526000805160206111ad833981519152604482015290519081900360640190fd5b6001600160a01b0381166110f85760405162461bcd60e51b815260040180806020018281038252602681526020018061115e6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60035481565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616c6c6572206973206e6f7420616e20617070726f7665642044656c6567617420616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220546ee1f911bd258ba2ea545b1498359bad8fb103e6f23fb5798adca2d46db08e64736f6c6343000606003360806040523480156200001157600080fd5b506040516200178c3803806200178c833981810160405260208110156200003757600080fd5b505160006200004e6001600160e01b03620000f416565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350916000805160206200176c833981519152908290a3506200009b816001600160e01b03620000f816565b600280546001600160a01b039092166001600160a01b03199092169190911790556000805460ff60b01b1960ff60a81b1960ff60a01b19909216600160a01b1791909116600160a81b1716600160b01b179055620001ff565b3390565b6200010b6001600160e01b03620000f416565b6000546001600160a01b039081169116146200016e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620001b55760405162461bcd60e51b8152600401808060200182810382526026815260200180620017466026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216916000805160206200176c83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b611537806200020f6000396000f3fe6080604052600436106100e25760003560e01c8063715018a611610085578063715018a61461032f5780638da5cb5b146103465780638f8ff1b61461035b57806391bf9de9146103a2578063998a3d46146103b7578063b1050da5146103cc578063c1ba4e591461050a578063c9d27afe14610534578063f2fde38b14610566576100e9565b8063013cf08b146100ee5780631703a0181461025a578063184a0ae914610281578063185ed831146102965780632121dc75146102bf578063371fa854146102d457806350e59eb3146102e957806352191472146102fe576100e9565b366100e957005b600080fd5b3480156100fa57600080fd5b506101186004803603602081101561011157600080fd5b5035610599565b604051808b6001600160a01b03166001600160a01b031681526020018a6001600160a01b03166001600160a01b0316815260200189815260200188815260200187815260200186815260200185151515158152602001841515151581526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156101b557818101518382015260200161019d565b50505050905090810190601f1680156101e25780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156102155781810151838201526020016101fd565b50505050905090810190601f1680156102425780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b34801561026657600080fd5b5061026f610711565b60408051918252519081900360200190f35b34801561028d57600080fd5b5061026f610717565b3480156102a257600080fd5b506102ab61071d565b604080519115158252519081900360200190f35b3480156102cb57600080fd5b506102ab61072d565b3480156102e057600080fd5b5061026f610736565b3480156102f557600080fd5b506102ab61073c565b34801561030a57600080fd5b5061031361074c565b604080516001600160a01b039092168252519081900360200190f35b34801561033b57600080fd5b5061034461075b565b005b34801561035257600080fd5b506103136107fd565b34801561036757600080fd5b506103446004803603608081101561037e57600080fd5b506001600160a01b038135169060208101359060408101359060600135151561080d565b3480156103ae57600080fd5b506102ab6108a0565b3480156103c357600080fd5b506103136108b0565b61026f600480360360808110156103e257600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561041157600080fd5b82018360208201111561042357600080fd5b803590602001918460018302840111600160201b8311171561044457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561049657600080fd5b8201836020820111156104a857600080fd5b803590602001918460018302840111600160201b831117156104c957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108bf945050505050565b34801561051657600080fd5b506103446004803603602081101561052d57600080fd5b5035610a2e565b34801561054057600080fd5b506103446004803603604081101561055757600080fd5b50803590602001351515610a8b565b34801561057257600080fd5b506103446004803603602081101561058957600080fd5b50356001600160a01b0316610e83565b600760208181526000928352604092839020805460018083015460028085015460038601546004870154600588015460068901549a890180548d51610100998216158a026000190190911696909604601f81018c90048c0287018c01909d528c86526001600160a01b039889169c989096169a939992989197909660ff808616979190950490941694919391928301828280156106775780601f1061064c57610100808354040283529160200191610677565b820191906000526020600020905b81548152906001019060200180831161065a57829003601f168201915b5050505060088301805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529495949350908301828280156107075780601f106106dc57610100808354040283529160200191610707565b820191906000526020600020905b8154815290600101906020018083116106ea57829003601f168201915b505050505090508a565b60055481565b60045481565b600054600160b01b900460ff1681565b60065460ff1681565b60035481565b600054600160a01b900460ff1681565b6002546001600160a01b031681565b610763610f7b565b6000546001600160a01b039081169116146107b3576040805162461bcd60e51b81526020600482018190526024820152600080516020611494833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03165b90565b610815610f7b565b6000546001600160a01b03908116911614610865576040805162461bcd60e51b81526020600482018190526024820152600080516020611494833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0395909516949094179093556006805460ff191693151593909317909255600555600455565b600054600160a81b900460ff1681565b6001546001600160a01b031681565b600154604080516370a0823160e01b81523360048201529051600092670de0b6b3a7640000926001600160a01b03909116916370a0823191602480820192602092909190829003018186803b15801561091757600080fd5b505afa15801561092b573d6000803e3d6000fd5b505050506040513d602081101561094157600080fd5b50511015610996576040805162461bcd60e51b815260206004820181905260248201527f596f7520617265206e6f742061206d656d626572206f6620746869732044414f604482015290519081900360640190fd5b600380546001908101808355600090815260076020818152604083208054336001600160a01b031991821617825594810180549095166001600160a01b038c161790945593830182905560048301829055600583019190915542600283015585519192610a0a929184019190870190611364565b508251610a209060088301906020860190611364565b505060035495945050505050565b610a36610f7b565b6000546001600160a01b03908116911614610a86576040805162461bcd60e51b81526020600482018190526024820152600080516020611494833981519152604482015290519081900360640190fd5b600555565b600154604080516370a0823160e01b81523360048201529051670de0b6b3a7640000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610add57600080fd5b505afa158015610af1573d6000803e3d6000fd5b505050506040513d6020811015610b0757600080fd5b50511015610b5c576040805162461bcd60e51b815260206004820181905260248201527f596f7520617265206e6f742061206d656d626572206f6620746869732044414f604482015290519081900360640190fd5b6000828152600760209081526040808320338452600a81019092529091205460ff16151560011415610bbf5760405162461bcd60e51b81526004018080602001828103825260278152602001806114b46027913960400191505060405180910390fd5b600154604080516370a0823160e01b815233600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610c0a57600080fd5b505afa158015610c1e573d6000803e3d6000fd5b505050506040513d6020811015610c3457600080fd5b505160065490915060ff1615610d4b57600154604080516347a861d160e11b8152336004820152815160009384936001600160a01b0390911692638f50c3a29260248083019392829003018186803b158015610c8f57600080fd5b505afa158015610ca3573d6000803e3d6000fd5b505050506040513d6040811015610cb957600080fd5b5080516020909101519092509050828114610d055760405162461bcd60e51b815260040180806020018281038252603a81526020018061145a603a913960400191505060405180910390fd5b8184600201541015610d485760405162461bcd60e51b81526004018080602001828103825260378152602001806114236037913960400191505060405180910390fd5b50505b6004820154604080516060810182528515158152336020808301918252828401868152600095865260098801909152929093209051815493516001600160a01b031661010002610100600160a81b031991151560ff199095169490941716929092178255516001909101556003820154610dc59082610f7f565b6003830155336000908152600a830160209081526040808320805460ff191660019081179091555481516318160ddd60e01b815291516001600160a01b0391909116926318160ddd9260048082019391829003018186803b158015610e2957600080fd5b505afa158015610e3d573d6000803e3d6000fd5b505050506040513d6020811015610e5357600080fd5b50516003840154909150600090610e6a9083610fe2565b90508015610e7b57610e7b86611022565b505050505050565b610e8b610f7b565b6000546001600160a01b03908116911614610edb576040805162461bcd60e51b81526020600482018190526024820152600080516020611494833981519152604482015290519081900360640190fd5b6001600160a01b038116610f205760405162461bcd60e51b81526004018080602001828103825260268152602001806113fd6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600082820183811015610fd9576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600080610ff18484600261125f565b905082841415611005576001915050610fdc565b6005548110611018576001915050610fdc565b6000915050610fdc565b6000818152600760205260409020600454600282015461104990429063ffffffff61129016565b106110695760068101805461ff001960ff1990911660011716905561125b565b600681015460ff16156110ad5760405162461bcd60e51b81526004018080602001828103825260278152602001806114db6027913960400191505060405180910390fd5b600080805b836004015481116111165760008181526009850160205260409020805460ff16156110f45760018101546110ed90859063ffffffff610f7f16565b935061110d565b600181015461110a90849063ffffffff610f7f16565b92505b506001016110b2565b50808211156112415760028054600185810154600587015460405163024af59b60e61b81526001600160a01b03928316600482018181526024830184905260606044840190815260088c018054600019988116156101000298909801909716989098046064840181905294909616966392bd66c0969195939491929091608490910190849080156111e85780601f106111bd576101008083540402835291602001916111e8565b820191906000526020600020905b8154815290600101906020018083116111cb57829003601f168201915b5050945050505050600060405180830381600087803b15801561120a57600080fd5b505af115801561121e573d6000803e3d6000fd5b50505060068401805461ff001960ff199091166001171661010017905550611258565b60068301805461ff001960ff199091166001171690555b50505b5050565b60008082600101600a0a850290506000600a85838161127a57fe5b046005018161128557fe5b049695505050505050565b6000610fd983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506000818484111561135c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611321578181015183820152602001611309565b50505050905090810190601f16801561134e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106113a557805160ff19168380011785556113d2565b828001600101855582156113d2579182015b828111156113d25782518255916020019190600101906113b7565b506113de9291506113e2565b5090565b61080a91905b808211156113de57600081556001016113e856fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737356696f6c6174696e672052656c617469766974793a2054696d65206572726f7220746f6b656e2074696d657320646f6e74206d6174636856696f6c6174696e672052656c617469766974793a205370616365206572726f7220746f6b656e20616d6f756e747320646f6e74206d617463684f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572596f75204861766520616c726561647920766f746564206f6e20746869732070726f706f73616c546869732070726f706f73616c2068617320616c7265616479206265656e206578656375746564a2646970667358221220e48cb41a76142abfc89bc5cf79367628f1cf72ec33711a16980143b64329ce9e64736f6c634300060600334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e017ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3eca2646970667358221220893f50623a7a4200687f52fde100794c5e344485b2839879ab556f4c22eb29f864736f6c63430006060033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "494:4246:8:-:0;;;1218:548;5:9:-1;2:2;;;27:1;24;17:12;2:2;1218:548:8;;;;;;;;;;;;;;;;;;;;;882:17:13;902:12;-1:-1:-1;;;;;902:10:13;:12;:::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:13;-1:-1:-1;;;;;924:18:13;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:13;957:43;;924:6;;957:43;848:159;1381:19:8;:26;1358:12;:19;:49;1337:124;;;;-1:-1:-1;;;1337:124:8;;;;;;;;;;;;;;;;;1521:9;1516:244;1540:19;:26;1536:1;:30;1516:244;;;1620:19;1640:1;1620:22;;;;;;;;;;;;;;1587:13;1601:12;1614:1;1601:15;;;;;;;;;;;;;;1587:30;;;;;;;;;;;;;;;;;;;;;:55;;;;;-1:-1:-1;;;;;1587:55:8;;;;;-1:-1:-1;;;;;1587:55:8;;;;;;1691:4;1656:8;:32;1665:19;1685:1;1665:22;;;;;;;;;;;;;;-1:-1:-1;;;;;1656:32:8;-1:-1:-1;;;;;1656:32:8;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1709:11;1726:19;1746:1;1726:22;;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;1709:40:8;;;;;;;;;;;;-1:-1:-1;;;;;;1709:40:8;-1:-1:-1;;;;;1709:40:8;;;;;;;;;;1568:3;1516:244;;;;1218:548;;494:4246;;598:104:12;685:10;598:104;:::o;164:722:-1:-;;292:3;285:4;277:6;273:17;269:27;259:2;;-1:-1;;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;;;362:80;;;470:21;;;353:89;-1:-1;514:4;527:14;;;;502:17;;;616;;;607:27;;;;604:36;-1:-1;601:2;;;653:1;;643:12;601:2;678:1;;663:217;688:6;685:1;682:13;663:217;;;83:13;;-1:-1;;;;;6002:54;;6404:35;;6394:2;;678:1;;6443:12;6394:2;756:61;;831:14;;;;859;;;;710:1;703:9;663:217;;;667:14;;;;;;252:634;;;;;2088:677;;;2280:2;;2268:9;2259:7;2255:23;2251:32;2248:2;;;-1:-1;;2286:12;2248:2;2331:24;;-1:-1;;;;;2364:30;;;2361:2;;;-1:-1;;2397:12;2361:2;2509:6;2498:9;2494:22;1049:3;1042:4;1034:6;1030:17;1026:27;1016:2;;-1:-1;;1057:12;1016:2;1097:6;1091:13;1077:27;;1119:90;1134:74;1201:6;1134:74;;1119:90;1237:21;;;1281:4;1294:14;;;;1215:16;1269:17;;;-1:-1;1374:247;1399:6;1396:1;1393:13;1374:247;;;1475:3;1469:10;1273:6;1457:23;1749:3;1730:17;1457:23;1730:17;1726:27;1716:2;;-1:-1;;1757:12;1716:2;1281:4;1457:23;;1791:13;1819:65;1834:49;1876:6;1834:49;;1819:65;1904:6;1897:5;1890:21;2008:3;2280:2;1999:6;1457:23;1990:16;;1987:25;1984:2;;;-1:-1;;2015:12;1984:2;2035:39;2067:6;1281:4;1966:5;1962:16;2280:2;1457:23;1928:17;2035:39;;;1487:71;;-1:-1;;1572:14;;;;1600;;;;1421:1;1414:9;1374:247;;;-1:-1;;2569:18;;2563:25;2417:109;;-1:-1;2563:25;-1:-1;;;2597:30;;;2594:2;;;-1:-1;;2630:12;2594:2;;;2660:89;2741:7;2732:6;2721:9;2717:22;2660:89;;;2650:99;;;2242:523;;;;;;3476:266;;2935:5;5475:12;3047:52;3092:6;3087:3;3080:4;3073:5;3069:16;3047:52;;;3111:16;;;;;3603:139;-1:-1;;3603:139;3749:407;3940:2;3954:47;;;3364:2;3925:18;;;5620:19;3400:30;5660:14;;;3380:51;3450:12;;;3911:245;4163:256;4225:2;4219:9;4251:17;;;-1:-1;;;;;4311:34;;4347:22;;;4308:62;4305:2;;;4383:1;;4373:12;4305:2;4225;4392:22;4203:216;;-1:-1;4203:216;4426:304;;-1:-1;;;;;4574:30;;4571:2;;;-1:-1;;4607:12;4571:2;-1:-1;4652:4;4640:17;;;4705:15;;4508:222;5058:322;;-1:-1;;;;;5191:30;;5188:2;;;-1:-1;;5224:12;5188:2;-1:-1;5297:9;5278:17;-1:-1;;5274:33;5365:4;5355:15;;5125:255;6069:268;6134:1;6141:101;6155:6;6152:1;6149:13;6141:101;;;6222:11;;;6216:18;6203:11;;;6196:39;6177:2;6170:10;6141:101;;;6257:6;6254:1;6251:13;6248:2;;;6134:1;6313:6;6308:3;6304:16;6297:27;6248:2;;6118:219;;;;;494:4246:8;;;;;;",
  "deployedSourceMap": "494:4246:8:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;494:4246:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;946:52:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1662:453;;;;;;;;;:::i;:::-;;1366:34;;;;;;;;;:::i;3835:489::-;;;;;;;;;:::i;615:47:8:-;;;;;;;;;:::i;3096:365:7:-;;;;;;;;;:::i;1106:56::-;;;;;;;;;:::i;683:47::-;;;;;;;;;:::i;2388:455::-;;;;;;;;;:::i;1245:28::-;;;;;;;;;:::i;1706:145:13:-;;;:::i;1083:77::-;;;:::i;759:40:8:-;;;;;;;;;:::i;:::-;;;;;;;;4194:119;;;;;;;;;:::i;823:40:7:-;;;;;;;;;:::i;2484:1436:8:-;;;;;;;;;:::i;4623:113::-;;;;;;;;;:::i;2000:240:13:-;;;;;;;;;:::i;946:52:7:-;;;;;;;;;;;;-1:-1:-1;;;;;946:52:7;;:::o;1662:453::-;1297:12:13;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:13;;;:22;;;1279:67;;;;-1:-1:-1;;;1279:67:13;;;;;;;;;;;;;;;;;1813:13:7::1;1827:11;1813:26;;;;;;;;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;1813:26:7::1;:88:::0;1792:159:::1;;;;-1:-1:-1::0;;;1792:159:7::1;;;;;;;;;1990:21;1961:13;1975:11;1961:26;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;:50;;-1:-1:-1;;;;;;1961:50:7;;::::1;-1:-1:-1::0;;;;;1961:50:7;;::::1;;::::0;;;2021:31;;;::::1;-1:-1:-1::0;2021:31:7;;;:8:::1;:31:::0;;;;;;:38;;-1:-1:-1;;2021:38:7::1;-1:-1:-1::0;2021:38:7;;::::1;::::0;;;2069:11:::1;27:10:-1::0;;23:18;;::::1;45:23:::0;;2069:39:7;;;;::::1;::::0;;;;::::1;;::::0;;-1:-1:-1;1662:453:7:o;1366:34::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1366:34:7;;-1:-1:-1;1366:34:7;:::o;3835:489::-;4074:7;4092:11;4140:10;4166:9;4191:15;4222:6;4244:8;4268:10;4114:176;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;4092:199:7;3835:489;-1:-1:-1;;;;;;;;3835:489:7:o;615:47:8:-;22:14:-1;;169:4;143:32;;;;;198:20;;615:47:8;224:31:-1;;156:18;;;283;;;;273:49;328:32;;615:47:8;-1:-1:-1;;;;;615:47:8;;:::o;3096:365:7:-;3194:7;3217:22;3257:13;3271:11;3257:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3311:24:7;;-1:-1:-1;;;;;3257:26:7;;-1:-1:-1;3257:26:7;;;;3311:15;;:24;;3327:7;;3311:24;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3311:24:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3311:24:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3311:24:7;;;;;;;;;-1:-1:-1;;;;;3345:25:7;;;;;;;:17;:25;;;;;;;;:35;;;;;-1:-1:-1;;;;;;3345:35:7;;;;;;;;3390:28;;:19;:28;;;;27:10:-1;;3345:35:7;23:18:-1;;45:23;;3390:41:7;;;;;;;;;;;;;;3294;-1:-1:-1;;;3096:365:7;;;;:::o;1106:56::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1106:56:7;;-1:-1:-1;1106:56:7;;-1:-1:-1;1106:56:7:o;683:47::-;22:14:-1;;169:4;143:32;;;;;198:20;;683:47:7;224:31:-1;;156:18;;;283;;;;273:49;328:32;;683:47:7;-1:-1:-1;;;;;683:47:7;;:::o;2388:455::-;2535:13;2549:11;2535:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2535:26:7;:88;2514:159;;;;-1:-1:-1;;;2514:159:7;;;;;;;;;2712:21;2683:13;2697:11;2683:26;;;;;;;;;;;;;;;;;;;;;;;:50;;-1:-1:-1;;;;;;2683:50:7;;;-1:-1:-1;;;;;2683:50:7;;;;;;;2743:31;;;;-1:-1:-1;2743:31:7;;;:8;:31;;;;;;:38;;-1:-1:-1;;2743:38:7;-1:-1:-1;2743:38:7;;;;;;2791:17;27:10:-1;;23:18;;;45:23;;2791:45:7;;;;;;;;;;;;;-1:-1:-1;2388:455:7:o;1245:28::-;;;;;;;;;;1706:145:13;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:13;;;:22;;;1279:67;;;;-1:-1:-1;;;1279:67:13;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;-1:-1:-1;;;;;1796:6:13;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;-1:-1:-1;;;;;;1825:19:13::1;::::0;;1706:145::o;1083:77::-;1121:7;1147:6;-1:-1:-1;;;;;1147:6:13;1083:77;:::o;759:40:8:-;22:14:-1;;169:4;143:32;;;;;198:20;;759:40:8;224:31:-1;;156:18;;;283;;;;273:49;328:32;;759:40:8;;;;:::o;4194:119::-;4260:7;4286:13;4300:5;4286:20;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4286:20:8;;-1:-1:-1;4194:119:8;;;:::o;823:40:7:-;;;;;;;;;;;;;;;:::o;2484:1436:8:-;2735:9;2745:11;2735:22;;;;;;;;;;;;;;;;;;;;;;;;:30;;:22;:30;;2714:119;;;;-1:-1:-1;;;2714:119:8;;;;;;;;;2844:16;-1:-1:-1;;;;;2923:53:8;;2919:894;;3032:11;3061:10;3089:9;3116:42;3176:10;3204:15;3237:10;3004:257;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3004:257:8;2992:269;;3312:9;3275:13;3289:11;3275:26;;;;;;;;;;;;;;;;;;;;;:47;;-1:-1:-1;;;;;3275:47:8;;;-1:-1:-1;;;;;;3275:47:8;;;;;;-1:-1:-1;;;3336:39:8;;:27;;;;;;:39;;3364:10;;3336:39;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3336:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3336:39:8;;;;2919:894;;;3494:11;3523:10;3551:9;3578:7;3603:10;3631:15;3664:10;3466:222;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3466:222:8;3454:234;;3739:9;3702:13;3716:11;3702:26;;;;;;;;;;;;;;;;;;;;;:47;;-1:-1:-1;;;;;3702:47:8;;;-1:-1:-1;;;;;;3702:47:8;;;;;;-1:-1:-1;;;3763:39:8;;:27;;;;;;:39;;3791:10;;3763:39;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3763:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3763:39:8;;;;2919:894;3848:4;3823:9;3833:11;3823:22;;;;;;;;;;;;;;;;;;;;;:29;;;;;-1:-1:-1;;3823:29:8;;;;;;;;;;3867:46;;;;3889:9;;3901:11;;3867:46;;;;;;;;;;2484:1436;;;;;;;:::o;4623:113::-;4690:4;4713:9;4723:5;4713:16;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4623:113:8;;;:::o;2000:240:13:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:13;;;:22;;;1279:67;;;;-1:-1:-1;;;1279:67:13;;;;;;;;;-1:-1:-1;;;;;2088:22:13;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:13::1;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:13;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;-1:-1:-1;;;;;;2216:17:13::1;-1:-1:-1::0;;;;;2216:17:13;;;::::1;::::0;;;::::1;::::0;;2000:240::o;598:104:12:-;685:10;598:104;:::o;494:4246:8:-;;;;;;;;:::o;:::-;;;;;;;;:::o;415:442:-1:-;;517:3;510:4;502:6;498:17;494:27;484:2;;-1:-1;;525:12;484:2;572:6;559:20;15081:18;;15073:6;15070:30;15067:2;;;-1:-1;;15103:12;15067:2;14736;14730:9;15176;15157:17;;-1:-1;;15153:33;14762:17;;15244:4;14762:17;14822:34;;;14858:22;;;14819:62;14816:2;;;-1:-1;;14884:12;14816:2;14736;14903:22;665:21;;;585:74;-1:-1;585:74;765:16;;;15244:4;765:16;762:25;-1:-1;759:2;;;800:1;;790:12;759:2;16579:6;15244:4;707:6;703:17;15244:4;741:5;737:16;16556:30;16635:1;15244:4;16626:6;741:5;16617:16;;16610:27;;;;477:380;;;;;1002:241;;1106:2;1094:9;1085:7;1081:23;1077:32;1074:2;;;-1:-1;;1112:12;1074:2;85:6;72:20;97:33;124:5;97:33;;;1164:63;1068:175;-1:-1;;;1068:175;1250:263;;1365:2;1353:9;1344:7;1340:23;1336:32;1333:2;;;-1:-1;;1371:12;1333:2;226:6;220:13;238:33;265:5;238:33;;1520:472;;;1651:2;1639:9;1630:7;1626:23;1622:32;1619:2;;;-1:-1;;1657:12;1619:2;85:6;72:20;97:33;124:5;97:33;;;1709:63;-1:-1;1837:2;1822:18;;1809:32;1861:18;1850:30;;1847:2;;;-1:-1;;1883:12;1847:2;1913:63;1968:7;1959:6;1948:9;1944:22;1913:63;;;1903:73;;;1613:379;;;;;;1999:366;;;2120:2;2108:9;2099:7;2095:23;2091:32;2088:2;;;-1:-1;;2126:12;2088:2;85:6;72:20;97:33;124:5;97:33;;;2178:63;2278:2;2317:22;;;;932:20;;-1:-1;;;2082:283;2372:347;;2486:2;2474:9;2465:7;2461:23;2457:32;2454:2;;;-1:-1;;2492:12;2454:2;2550:17;2537:31;2588:18;2580:6;2577:30;2574:2;;;-1:-1;;2610:12;2574:2;2640:63;2695:7;2686:6;2675:9;2671:22;2640:63;;;2630:73;2448:271;-1:-1;;;;2448:271;2726:472;;;2857:2;2845:9;2836:7;2832:23;2828:32;2825:2;;;-1:-1;;2863:12;2825:2;2921:17;2908:31;2959:18;2951:6;2948:30;2945:2;;;-1:-1;;2981:12;2945:2;3011:63;3066:7;3057:6;3046:9;3042:22;3011:63;;;3001:73;;;3111:2;3154:9;3150:22;72:20;97:33;124:5;97:33;;;3119:63;;;;2819:379;;;;;;3205:1069;;;;;;;3408:3;3396:9;3387:7;3383:23;3379:33;3376:2;;;-1:-1;;3415:12;3376:2;3473:17;3460:31;3511:18;;3503:6;3500:30;3497:2;;;-1:-1;;3533:12;3497:2;3563:63;3618:7;3609:6;3598:9;3594:22;3563:63;;;3553:73;;3691:2;3680:9;3676:18;3663:32;3649:46;;3511:18;3707:6;3704:30;3701:2;;;-1:-1;;3737:12;3701:2;;3767:63;3822:7;3813:6;3802:9;3798:22;3767:63;;;3757:73;;;3867:2;3907:9;3903:22;347:20;372:30;396:5;372:30;;;3875:60;-1:-1;3972:2;4008:22;;347:20;372:30;347:20;372:30;;;3980:60;-1:-1;4077:3;4117:22;;72:20;97:33;72:20;97:33;;;4086:63;;;;4186:3;4230:9;4226:22;932:20;4195:63;;3370:904;;;;;;;;;4281:1181;;;;;;;4497:3;4485:9;4476:7;4472:23;4468:33;4465:2;;;-1:-1;;4504:12;4465:2;4562:17;4549:31;4600:18;;4592:6;4589:30;4586:2;;;-1:-1;;4622:12;4586:2;4652:63;4707:7;4698:6;4687:9;4683:22;4652:63;;;4642:73;;4780:2;4769:9;4765:18;4752:32;4738:46;;4600:18;4796:6;4793:30;4790:2;;;-1:-1;;4826:12;4790:2;4856:63;4911:7;4902:6;4891:9;4887:22;4856:63;;;4846:73;;4984:2;4973:9;4969:18;4956:32;4942:46;;4600:18;5000:6;4997:30;4994:2;;;-1:-1;;5030:12;4994:2;;5060:63;5115:7;5106:6;5095:9;5091:22;5060:63;;;5050:73;;;5160:2;5203:9;5199:22;72:20;97:33;124:5;97:33;;;5168:63;-1:-1;5268:3;5305:22;;347:20;372:30;347:20;372:30;;5469:241;;5573:2;5561:9;5552:7;5548:23;5544:32;5541:2;;;-1:-1;;5579:12;5541:2;-1:-1;932:20;;5535:175;-1:-1;5535:175;6097:347;;6242:5;15354:12;15511:6;15506:3;15499:19;6336:52;6381:6;15548:4;15543:3;15539:14;15548:4;6362:5;6358:16;6336:52;;;15176:9;16996:14;-1:-1;;16992:28;6400:39;;;;15548:4;6400:39;;6189:255;-1:-1;;6189:255;8384:266;;6614:5;15354:12;6726:52;6771:6;6766:3;6759:4;6752:5;6748:16;6726:52;;;6790:16;;;;;8511:139;-1:-1;;8511:139;8657:213;-1:-1;;;;;15973:54;;;;5937:37;;8775:2;8760:18;;8746:124;9113:428;-1:-1;;;;;15973:54;;5796:58;;9287:2;9413;9398:18;;9391:48;;;9113:428;;9453:78;;9272:18;;9517:6;9453:78;;9548:201;15885:13;;15878:21;6051:34;;9660:2;9645:18;;9631:118;9756:923;;10042:3;10064:17;10057:47;10118:78;10042:3;10031:9;10027:19;10182:6;10118:78;;;10244:9;10238:4;10234:20;10229:2;10218:9;10214:18;10207:48;10269:78;10342:4;10333:6;10269:78;;;15885:13;;15878:21;10420:2;10405:18;;6051:34;-1:-1;;15885:13;;15878:21;10497:2;10482:18;;6051:34;-1:-1;;;;;15973:54;;;;10580:3;10565:19;;5937:37;15984:42;10649:19;;;8335:37;10261:86;10013:666;-1:-1;;10013:666;10686:1167;;11042:3;11064:17;11057:47;11118:78;11042:3;11031:9;11027:19;11182:6;11118:78;;;11244:9;11238:4;11234:20;11229:2;11218:9;11214:18;11207:48;11269:78;11342:4;11333:6;11269:78;;;11395:9;11389:4;11385:20;11380:2;11369:9;11365:18;11358:48;11420:78;11493:4;11484:6;11420:78;;;-1:-1;;;;;15973:54;;;11585:2;11570:18;;5796:58;15973:54;;;;11676:3;11661:19;;5796:58;-1:-1;;15885:13;;15878:21;15984:42;11739:19;;6051:34;11838:3;11823:19;;;8335:37;11412:86;11013:840;-1:-1;;;;11013:840;13018:407;13209:2;13223:47;;;7043:2;13194:18;;;15499:19;7079:34;15539:14;;;7059:55;-1:-1;;;7134:12;;;7127:30;7176:12;;;13180:245;13432:407;13623:2;13637:47;;;7427:2;13608:18;;;15499:19;-1:-1;;;15539:14;;;7443:47;7509:12;;;13594:245;13846:407;14037:2;14051:47;;;14022:18;;;15499:19;7796:34;15539:14;;;7776:55;7850:12;;;14008:245;14260:407;14451:2;14465:47;;;8101:2;14436:18;;;15499:19;8137:34;15539:14;;;8117:55;-1:-1;;;8192:12;;;8185:34;8238:12;;;14422:245;16652:268;16717:1;16724:101;16738:6;16735:1;16732:13;16724:101;;;16805:11;;;16799:18;16786:11;;;16779:39;16760:2;16753:10;16724:101;;;16840:6;16837:1;16834:13;16831:2;;;16717:1;16896:6;16891:3;16887:16;16880:27;16831:2;;16701:219;;;;17033:117;-1:-1;;;;;15973:54;;17092:35;;17082:2;;17141:1;;17131:12;17082:2;17076:74;;17157:111;17238:5;15885:13;15878:21;17216:5;17213:32;17203:2;;17259:1;;17249:12",
  "source": "pragma solidity ^0.6.2;\npragma experimental ABIEncoderV2;\n\nimport \"../Cortex/Cortex.sol\";\nimport \"./Hippocampus.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n////////////////////////////////////////////////////////////////////////////////////////////\n/// @title Matrix\n/// @author Christopher Dixon\n////////////////////////////////////////////////////////////////////////////////////////////\n/**\nThe Matrix contract is designed to produce and track individual ZDAO contracts\n**/\n\ncontract Matrix is Ownable, Hippocampus {\n    /// @notice cortexTracker is used to track a DAO's name to its address\n    mapping(string => address) public cortexTracker;\n    /// @notice nameTaken is used to track whether or not a DAO exists with a certain name\n    mapping(string => bool) public nameTaken;\n\n    event CortexCreated(address _cortexAdd, string _cotexName);\n\n    /**\n    @notice the constructor is fired only once during contract creation and is used to set up variables in the contract\n    @param _NeuronNames is an array of all availible core neuron names availible at deployment time\n    @param _initialCoreNeurons is an array of all availible core neuron addresses availible at deployment time\n    **/\n    constructor(\n        string[] memory _NeuronNames,\n        address[] memory _initialCoreNeurons\n    ) public {\n        require(\n            _NeuronNames.length == _initialCoreNeurons.length,\n            \"Error: Array Length Mismatch\"\n        );\n        //loop through and store neuron info\n        for (uint256 i = 0; i < _initialCoreNeurons.length; ++i) {\n            neuralNetwork[_NeuronNames[i]] = _initialCoreNeurons[i];\n            isNeuron[_initialCoreNeurons[i]] = true;\n            coreNeurons.push(_initialCoreNeurons[i]);\n        }\n    }\n\n    /**\n     @notice createCortex is a public function that allows a user to create their own zDAO\n     @dev this function can create a rep token for the new DAO OR use an existing ERC20 token\n     @param _CortexName is the name of the DAO being created\n     @param _tokenName is the name of the DAO's rep token(leave blank if using an existing token)\n     @param _tokenSym is the symbol of the DAO's rep token(leave blank if using an existing token)\n     @param _synaps is the address of an existing ERC20 token that can represent the DAO's rep\n                (this would be set to 0x0 if not applicapble)\n     @param _isTransferable is a bool representing whether or not the rep token is transferable\n    **/\n    function createCortex(\n        string memory _CortexName,\n        string memory _tokenName,\n        string memory _tokenSym,\n        address _synaps,\n        bool _isTransferable,\n        uint256 _maxSupply\n    ) public {\n        require(\n            nameTaken[_CortexName] != true,\n            \"Name Error: This DAO name is already taken\"\n        );\n\n        Cortex newCortex;\n        ///if we are not using an existing token\n        if (_synaps == 0x0000000000000000000000000000000000000000) {\n            newCortex = new Cortex(\n                _CortexName,\n                _tokenName,\n                _tokenSym,\n                0x0000000000000000000000000000000000000000,\n                msg.sender,\n                _isTransferable,\n                _maxSupply\n            );\n            cortexTracker[_CortexName] = address(newCortex);\n            newCortex.transferOwnership(msg.sender);\n        } else {\n          ///if we are using and existing token\n            newCortex = new Cortex(\n                _CortexName,\n                _tokenName,\n                _tokenSym,\n                _synaps,\n                msg.sender,\n                _isTransferable,\n                _maxSupply\n            );\n            cortexTracker[_CortexName] = address(newCortex);\n            newCortex.transferOwnership(msg.sender);\n        }\n\n        nameTaken[_CortexName] = true;\n        emit CortexCreated(address(newCortex), _CortexName);\n    }\n\n    /**\n     @notice retrieveCortex is used to retrieve a Cortex's address by its name\n     @dev this is a view only function for front end use\n     @param _Name is the name of the Cortex who's address is being retrieved\n     @return the address of the Cortex\n    **/\n    function retrieveCortex(string memory _Name) public view returns (address) {\n        return cortexTracker[_Name];\n    }\n\n    /**\n     @notice cortexNameTaken is used to determine if a name for a Cortex is currently in use\n     @dev this is a view only function for front end use\n     @param _Name is the proposed name of a Cortex\n     @return a bool(true/false) for whether or not a Cortex with the input name exists\n    **/\n    function cortexNameTaken(string memory _Name) public view returns (bool) {\n        return nameTaken[_Name];\n    }\n\n\n}\n",
  "sourcePath": "/home/stan36/repos/zer0/ZDAO/contracts/Matrix/Matrix.sol",
  "ast": {
    "absolutePath": "/home/stan36/repos/zer0/ZDAO/contracts/Matrix/Matrix.sol",
    "exportedSymbols": {
      "Matrix": [
        1830
      ]
    },
    "id": 1831,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1612,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "id": 1613,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:8"
      },
      {
        "absolutePath": "/home/stan36/repos/zer0/ZDAO/contracts/Cortex/Cortex.sol",
        "file": "../Cortex/Cortex.sol",
        "id": 1614,
        "nodeType": "ImportDirective",
        "scope": 1831,
        "sourceUnit": 1181,
        "src": "59:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stan36/repos/zer0/ZDAO/contracts/Matrix/Hippocampus.sol",
        "file": "./Hippocampus.sol",
        "id": 1615,
        "nodeType": "ImportDirective",
        "scope": 1831,
        "sourceUnit": 1611,
        "src": "90:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1616,
        "nodeType": "ImportDirective",
        "scope": 1831,
        "sourceUnit": 2050,
        "src": "118:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1618,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2049,
              "src": "513:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2049",
                "typeString": "contract Ownable"
              }
            },
            "id": 1619,
            "nodeType": "InheritanceSpecifier",
            "src": "513:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1620,
              "name": "Hippocampus",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1610,
              "src": "522:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hippocampus_$1610",
                "typeString": "contract Hippocampus"
              }
            },
            "id": 1621,
            "nodeType": "InheritanceSpecifier",
            "src": "522:11:8"
          }
        ],
        "contractDependencies": [
          1180,
          1610,
          1940,
          2049
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1617,
          "nodeType": "StructuredDocumentation",
          "src": "406:86:8",
          "text": "The Matrix contract is designed to produce and track individual ZDAO contracts*"
        },
        "fullyImplemented": true,
        "id": 1830,
        "linearizedBaseContracts": [
          1830,
          1610,
          2049,
          1940
        ],
        "name": "Matrix",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3f21672e",
            "id": 1625,
            "mutability": "mutable",
            "name": "cortexTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1830,
            "src": "615:47:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 1624,
              "keyType": {
                "id": 1622,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "623:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "615:26:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 1623,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "633:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "91fc437e",
            "id": 1629,
            "mutability": "mutable",
            "name": "nameTaken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1830,
            "src": "759:40:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 1628,
              "keyType": {
                "id": 1626,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "767:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "759:23:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 1627,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "777:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1635,
            "name": "CortexCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_cortexAdd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1635,
                  "src": "826:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1633,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_cotexName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1635,
                  "src": "846:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "825:39:8"
            },
            "src": "806:59:8"
          },
          {
            "body": {
              "id": 1693,
              "nodeType": "Block",
              "src": "1327:439:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1646,
                            "name": "_NeuronNames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1639,
                            "src": "1358:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1358:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1648,
                            "name": "_initialCoreNeurons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1642,
                            "src": "1381:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1381:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1358:49:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a204172726179204c656e677468204d69736d61746368",
                        "id": 1651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1421:30:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b57281173d1b28262aa4abb539bc6b1272327029b378e8cd8ca60469c0a49cbf",
                          "typeString": "literal_string \"Error: Array Length Mismatch\""
                        },
                        "value": "Error: Array Length Mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b57281173d1b28262aa4abb539bc6b1272327029b378e8cd8ca60469c0a49cbf",
                          "typeString": "literal_string \"Error: Array Length Mismatch\""
                        }
                      ],
                      "id": 1645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1337:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:124:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1653,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:124:8"
                },
                {
                  "body": {
                    "id": 1691,
                    "nodeType": "Block",
                    "src": "1573:187:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1665,
                              "name": "neuralNetwork",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1439,
                              "src": "1587:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1669,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1666,
                                "name": "_NeuronNames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "1601:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 1668,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1667,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1655,
                                "src": "1614:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1601:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1587:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1670,
                              "name": "_initialCoreNeurons",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1642,
                              "src": "1620:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1672,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1671,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1655,
                              "src": "1640:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1620:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1587:55:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1674,
                        "nodeType": "ExpressionStatement",
                        "src": "1587:55:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1675,
                              "name": "isNeuron",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1443,
                              "src": "1656:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1679,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1676,
                                "name": "_initialCoreNeurons",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "1665:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1678,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1677,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1655,
                                "src": "1685:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1665:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1656:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1691:4:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1656:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1682,
                        "nodeType": "ExpressionStatement",
                        "src": "1656:39:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1686,
                                "name": "_initialCoreNeurons",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "1726:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1688,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1687,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1655,
                                "src": "1746:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1726:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1683,
                              "name": "coreNeurons",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1455,
                              "src": "1709:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1709:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1709:40:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1690,
                        "nodeType": "ExpressionStatement",
                        "src": "1709:40:8"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1658,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1655,
                      "src": "1536:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1659,
                        "name": "_initialCoreNeurons",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1642,
                        "src": "1540:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1540:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1536:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1692,
                  "initializationExpression": {
                    "assignments": [
                      1655
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1655,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1692,
                        "src": "1521:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1654,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1521:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1657,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1533:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1521:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1568:3:8",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1662,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "1570:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1664,
                    "nodeType": "ExpressionStatement",
                    "src": "1568:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "1516:244:8"
                }
              ]
            },
            "documentation": {
              "id": 1636,
              "nodeType": "StructuredDocumentation",
              "src": "871:342:8",
              "text": "@notice the constructor is fired only once during contract creation and is used to set up variables in the contract\n@param _NeuronNames is an array of all availible core neuron names availible at deployment time\n@param _initialCoreNeurons is an array of all availible core neuron addresses availible at deployment time*"
            },
            "id": 1694,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1639,
                  "mutability": "mutable",
                  "name": "_NeuronNames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1694,
                  "src": "1239:28:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1637,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1239:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1638,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1239:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "_initialCoreNeurons",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1694,
                  "src": "1277:36:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1640,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1277:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1641,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1277:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1229:90:8"
            },
            "returnParameters": {
              "id": 1644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:8"
            },
            "scope": 1830,
            "src": "1218:548:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1802,
              "nodeType": "Block",
              "src": "2704:1216:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1711,
                            "name": "nameTaken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1629,
                            "src": "2735:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 1713,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1712,
                            "name": "_CortexName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1697,
                            "src": "2745:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2735:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:4:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2735:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e616d65204572726f723a20546869732044414f206e616d6520697320616c72656164792074616b656e",
                        "id": 1716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2779:44:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb8b132041d41e1a6c573ce456681f509c5baa07e8f297ead973da5095eba968",
                          "typeString": "literal_string \"Name Error: This DAO name is already taken\""
                        },
                        "value": "Name Error: This DAO name is already taken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb8b132041d41e1a6c573ce456681f509c5baa07e8f297ead973da5095eba968",
                          "typeString": "literal_string \"Name Error: This DAO name is already taken\""
                        }
                      ],
                      "id": 1710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2714:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2714:119:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1718,
                  "nodeType": "ExpressionStatement",
                  "src": "2714:119:8"
                },
                {
                  "assignments": [
                    1720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1720,
                      "mutability": "mutable",
                      "name": "newCortex",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1802,
                      "src": "2844:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cortex_$1180",
                        "typeString": "contract Cortex"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1719,
                        "name": "Cortex",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1180,
                        "src": "2844:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cortex_$1180",
                          "typeString": "contract Cortex"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1721,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2844:16:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1722,
                      "name": "_synaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1703,
                      "src": "2923:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                      "id": 1723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2934:42:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x0000000000000000000000000000000000000000"
                    },
                    "src": "2923:53:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1786,
                    "nodeType": "Block",
                    "src": "3392:421:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1756,
                            "name": "newCortex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1720,
                            "src": "3454:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1759,
                                "name": "_CortexName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1697,
                                "src": "3494:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1760,
                                "name": "_tokenName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1699,
                                "src": "3523:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1761,
                                "name": "_tokenSym",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1701,
                                "src": "3551:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1762,
                                "name": "_synaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1703,
                                "src": "3578:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1763,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3603:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3603:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1765,
                                "name": "_isTransferable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1705,
                                "src": "3631:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1766,
                                "name": "_maxSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1707,
                                "src": "3664:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "3466:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_bool_$_t_uint256_$returns$_t_contract$_Cortex_$1180_$",
                                "typeString": "function (string memory,string memory,string memory,address,address,bool,uint256) returns (contract Cortex)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 1757,
                                "name": "Cortex",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 1180,
                                "src": "3470:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              }
                            },
                            "id": 1767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3466:222:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          },
                          "src": "3454:234:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cortex_$1180",
                            "typeString": "contract Cortex"
                          }
                        },
                        "id": 1769,
                        "nodeType": "ExpressionStatement",
                        "src": "3454:234:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1770,
                              "name": "cortexTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1625,
                              "src": "3702:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1772,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1771,
                              "name": "_CortexName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1697,
                              "src": "3716:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3702:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1775,
                                "name": "newCortex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1720,
                                "src": "3739:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              ],
                              "id": 1774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3731:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1773,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3731:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3731:18:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3702:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1778,
                        "nodeType": "ExpressionStatement",
                        "src": "3702:47:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1782,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3791:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3791:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1779,
                              "name": "newCortex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "3763:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Cortex_$1180",
                                "typeString": "contract Cortex"
                              }
                            },
                            "id": 1781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2048,
                            "src": "3763:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3763:39:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1785,
                        "nodeType": "ExpressionStatement",
                        "src": "3763:39:8"
                      }
                    ]
                  },
                  "id": 1787,
                  "nodeType": "IfStatement",
                  "src": "2919:894:8",
                  "trueBody": {
                    "id": 1755,
                    "nodeType": "Block",
                    "src": "2978:408:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1725,
                            "name": "newCortex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1720,
                            "src": "2992:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1728,
                                "name": "_CortexName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1697,
                                "src": "3032:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1729,
                                "name": "_tokenName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1699,
                                "src": "3061:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1730,
                                "name": "_tokenSym",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1701,
                                "src": "3089:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                                "id": 1731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3116:42:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                "value": "0x0000000000000000000000000000000000000000"
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1732,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3176:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3176:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1734,
                                "name": "_isTransferable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1705,
                                "src": "3204:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1735,
                                "name": "_maxSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1707,
                                "src": "3237:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "3004:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_bool_$_t_uint256_$returns$_t_contract$_Cortex_$1180_$",
                                "typeString": "function (string memory,string memory,string memory,address,address,bool,uint256) returns (contract Cortex)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 1726,
                                "name": "Cortex",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 1180,
                                "src": "3008:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              }
                            },
                            "id": 1736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3004:257:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          },
                          "src": "2992:269:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cortex_$1180",
                            "typeString": "contract Cortex"
                          }
                        },
                        "id": 1738,
                        "nodeType": "ExpressionStatement",
                        "src": "2992:269:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1739,
                              "name": "cortexTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1625,
                              "src": "3275:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1741,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1740,
                              "name": "_CortexName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1697,
                              "src": "3289:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3275:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1744,
                                "name": "newCortex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1720,
                                "src": "3312:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              ],
                              "id": 1743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3304:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1742,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3304:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3304:18:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3275:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1747,
                        "nodeType": "ExpressionStatement",
                        "src": "3275:47:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1751,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3364:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3364:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1748,
                              "name": "newCortex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "3336:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Cortex_$1180",
                                "typeString": "contract Cortex"
                              }
                            },
                            "id": 1750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2048,
                            "src": "3336:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3336:39:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1754,
                        "nodeType": "ExpressionStatement",
                        "src": "3336:39:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1788,
                        "name": "nameTaken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "3823:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 1790,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1789,
                        "name": "_CortexName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1697,
                        "src": "3833:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3823:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3848:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3823:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "3823:29:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1797,
                            "name": "newCortex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1720,
                            "src": "3889:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          ],
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3881:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1795,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3881:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3881:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1799,
                        "name": "_CortexName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1697,
                        "src": "3901:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1794,
                      "name": "CortexCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1635,
                      "src": "3867:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 1800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3867:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1801,
                  "nodeType": "EmitStatement",
                  "src": "3862:51:8"
                }
              ]
            },
            "documentation": {
              "id": 1695,
              "nodeType": "StructuredDocumentation",
              "src": "1772:707:8",
              "text": "@notice createCortex is a public function that allows a user to create their own zDAO\n@dev this function can create a rep token for the new DAO OR use an existing ERC20 token\n@param _CortexName is the name of the DAO being created\n@param _tokenName is the name of the DAO's rep token(leave blank if using an existing token)\n@param _tokenSym is the symbol of the DAO's rep token(leave blank if using an existing token)\n@param _synaps is the address of an existing ERC20 token that can represent the DAO's rep\n(this would be set to 0x0 if not applicapble)\n@param _isTransferable is a bool representing whether or not the rep token is transferable*"
            },
            "functionSelector": "c50e154c",
            "id": 1803,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCortex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1697,
                  "mutability": "mutable",
                  "name": "_CortexName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2515:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1699,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2550:24:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1698,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1701,
                  "mutability": "mutable",
                  "name": "_tokenSym",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2584:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1700,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1703,
                  "mutability": "mutable",
                  "name": "_synaps",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2617:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2617:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1705,
                  "mutability": "mutable",
                  "name": "_isTransferable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2642:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1704,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1707,
                  "mutability": "mutable",
                  "name": "_maxSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2672:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2672:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2505:191:8"
            },
            "returnParameters": {
              "id": 1709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2704:0:8"
            },
            "scope": 1830,
            "src": "2484:1436:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1815,
              "nodeType": "Block",
              "src": "4269:44:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1811,
                      "name": "cortexTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1625,
                      "src": "4286:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 1813,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1812,
                      "name": "_Name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1806,
                      "src": "4300:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4286:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1810,
                  "id": 1814,
                  "nodeType": "Return",
                  "src": "4279:27:8"
                }
              ]
            },
            "documentation": {
              "id": 1804,
              "nodeType": "StructuredDocumentation",
              "src": "3926:263:8",
              "text": "@notice retrieveCortex is used to retrieve a Cortex's address by its name\n@dev this is a view only function for front end use\n@param _Name is the name of the Cortex who's address is being retrieved\n@return the address of the Cortex*"
            },
            "functionSelector": "a26d91df",
            "id": 1816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveCortex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1806,
                  "mutability": "mutable",
                  "name": "_Name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1816,
                  "src": "4218:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1805,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4218:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4217:21:8"
            },
            "returnParameters": {
              "id": 1810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1809,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1816,
                  "src": "4260:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4260:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4259:9:8"
            },
            "scope": 1830,
            "src": "4194:119:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1828,
              "nodeType": "Block",
              "src": "4696:40:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1824,
                      "name": "nameTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1629,
                      "src": "4713:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 1826,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1825,
                      "name": "_Name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1819,
                      "src": "4723:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4713:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1823,
                  "id": 1827,
                  "nodeType": "Return",
                  "src": "4706:23:8"
                }
              ]
            },
            "documentation": {
              "id": 1817,
              "nodeType": "StructuredDocumentation",
              "src": "4319:299:8",
              "text": "@notice cortexNameTaken is used to determine if a name for a Cortex is currently in use\n@dev this is a view only function for front end use\n@param _Name is the proposed name of a Cortex\n@return a bool(true/false) for whether or not a Cortex with the input name exists*"
            },
            "functionSelector": "d0a087c8",
            "id": 1829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cortexNameTaken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1819,
                  "mutability": "mutable",
                  "name": "_Name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1829,
                  "src": "4648:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1818,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4648:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4647:21:8"
            },
            "returnParameters": {
              "id": 1823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1822,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1829,
                  "src": "4690:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1821,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4690:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4689:6:8"
            },
            "scope": 1830,
            "src": "4623:113:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1831,
        "src": "494:4246:8"
      }
    ],
    "src": "0:4741:8"
  },
  "legacyAST": {
    "absolutePath": "/home/stan36/repos/zer0/ZDAO/contracts/Matrix/Matrix.sol",
    "exportedSymbols": {
      "Matrix": [
        1830
      ]
    },
    "id": 1831,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1612,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "id": 1613,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:8"
      },
      {
        "absolutePath": "/home/stan36/repos/zer0/ZDAO/contracts/Cortex/Cortex.sol",
        "file": "../Cortex/Cortex.sol",
        "id": 1614,
        "nodeType": "ImportDirective",
        "scope": 1831,
        "sourceUnit": 1181,
        "src": "59:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/stan36/repos/zer0/ZDAO/contracts/Matrix/Hippocampus.sol",
        "file": "./Hippocampus.sol",
        "id": 1615,
        "nodeType": "ImportDirective",
        "scope": 1831,
        "sourceUnit": 1611,
        "src": "90:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1616,
        "nodeType": "ImportDirective",
        "scope": 1831,
        "sourceUnit": 2050,
        "src": "118:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1618,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2049,
              "src": "513:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2049",
                "typeString": "contract Ownable"
              }
            },
            "id": 1619,
            "nodeType": "InheritanceSpecifier",
            "src": "513:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1620,
              "name": "Hippocampus",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1610,
              "src": "522:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hippocampus_$1610",
                "typeString": "contract Hippocampus"
              }
            },
            "id": 1621,
            "nodeType": "InheritanceSpecifier",
            "src": "522:11:8"
          }
        ],
        "contractDependencies": [
          1180,
          1610,
          1940,
          2049
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1617,
          "nodeType": "StructuredDocumentation",
          "src": "406:86:8",
          "text": "The Matrix contract is designed to produce and track individual ZDAO contracts*"
        },
        "fullyImplemented": true,
        "id": 1830,
        "linearizedBaseContracts": [
          1830,
          1610,
          2049,
          1940
        ],
        "name": "Matrix",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3f21672e",
            "id": 1625,
            "mutability": "mutable",
            "name": "cortexTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1830,
            "src": "615:47:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 1624,
              "keyType": {
                "id": 1622,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "623:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "615:26:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 1623,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "633:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "91fc437e",
            "id": 1629,
            "mutability": "mutable",
            "name": "nameTaken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1830,
            "src": "759:40:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 1628,
              "keyType": {
                "id": 1626,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "767:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "759:23:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 1627,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "777:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1635,
            "name": "CortexCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_cortexAdd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1635,
                  "src": "826:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1633,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_cotexName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1635,
                  "src": "846:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "825:39:8"
            },
            "src": "806:59:8"
          },
          {
            "body": {
              "id": 1693,
              "nodeType": "Block",
              "src": "1327:439:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1646,
                            "name": "_NeuronNames",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1639,
                            "src": "1358:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1358:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1648,
                            "name": "_initialCoreNeurons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1642,
                            "src": "1381:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1381:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1358:49:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a204172726179204c656e677468204d69736d61746368",
                        "id": 1651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1421:30:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b57281173d1b28262aa4abb539bc6b1272327029b378e8cd8ca60469c0a49cbf",
                          "typeString": "literal_string \"Error: Array Length Mismatch\""
                        },
                        "value": "Error: Array Length Mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b57281173d1b28262aa4abb539bc6b1272327029b378e8cd8ca60469c0a49cbf",
                          "typeString": "literal_string \"Error: Array Length Mismatch\""
                        }
                      ],
                      "id": 1645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1337:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:124:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1653,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:124:8"
                },
                {
                  "body": {
                    "id": 1691,
                    "nodeType": "Block",
                    "src": "1573:187:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1665,
                              "name": "neuralNetwork",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1439,
                              "src": "1587:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1669,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1666,
                                "name": "_NeuronNames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1639,
                                "src": "1601:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 1668,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1667,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1655,
                                "src": "1614:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1601:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1587:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1670,
                              "name": "_initialCoreNeurons",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1642,
                              "src": "1620:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1672,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1671,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1655,
                              "src": "1640:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1620:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1587:55:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1674,
                        "nodeType": "ExpressionStatement",
                        "src": "1587:55:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1675,
                              "name": "isNeuron",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1443,
                              "src": "1656:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1679,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1676,
                                "name": "_initialCoreNeurons",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "1665:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1678,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1677,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1655,
                                "src": "1685:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1665:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1656:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1691:4:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1656:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1682,
                        "nodeType": "ExpressionStatement",
                        "src": "1656:39:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1686,
                                "name": "_initialCoreNeurons",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "1726:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1688,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1687,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1655,
                                "src": "1746:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1726:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1683,
                              "name": "coreNeurons",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1455,
                              "src": "1709:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1709:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1709:40:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1690,
                        "nodeType": "ExpressionStatement",
                        "src": "1709:40:8"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1658,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1655,
                      "src": "1536:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1659,
                        "name": "_initialCoreNeurons",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1642,
                        "src": "1540:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1540:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1536:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1692,
                  "initializationExpression": {
                    "assignments": [
                      1655
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1655,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1692,
                        "src": "1521:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1654,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1521:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1657,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1533:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1521:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1568:3:8",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1662,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "1570:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1664,
                    "nodeType": "ExpressionStatement",
                    "src": "1568:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "1516:244:8"
                }
              ]
            },
            "documentation": {
              "id": 1636,
              "nodeType": "StructuredDocumentation",
              "src": "871:342:8",
              "text": "@notice the constructor is fired only once during contract creation and is used to set up variables in the contract\n@param _NeuronNames is an array of all availible core neuron names availible at deployment time\n@param _initialCoreNeurons is an array of all availible core neuron addresses availible at deployment time*"
            },
            "id": 1694,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1639,
                  "mutability": "mutable",
                  "name": "_NeuronNames",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1694,
                  "src": "1239:28:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1637,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1239:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1638,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1239:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "_initialCoreNeurons",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1694,
                  "src": "1277:36:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1640,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1277:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1641,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1277:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1229:90:8"
            },
            "returnParameters": {
              "id": 1644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:8"
            },
            "scope": 1830,
            "src": "1218:548:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1802,
              "nodeType": "Block",
              "src": "2704:1216:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1711,
                            "name": "nameTaken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1629,
                            "src": "2735:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 1713,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1712,
                            "name": "_CortexName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1697,
                            "src": "2745:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2735:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:4:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2735:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e616d65204572726f723a20546869732044414f206e616d6520697320616c72656164792074616b656e",
                        "id": 1716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2779:44:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb8b132041d41e1a6c573ce456681f509c5baa07e8f297ead973da5095eba968",
                          "typeString": "literal_string \"Name Error: This DAO name is already taken\""
                        },
                        "value": "Name Error: This DAO name is already taken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb8b132041d41e1a6c573ce456681f509c5baa07e8f297ead973da5095eba968",
                          "typeString": "literal_string \"Name Error: This DAO name is already taken\""
                        }
                      ],
                      "id": 1710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2714:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2714:119:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1718,
                  "nodeType": "ExpressionStatement",
                  "src": "2714:119:8"
                },
                {
                  "assignments": [
                    1720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1720,
                      "mutability": "mutable",
                      "name": "newCortex",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1802,
                      "src": "2844:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cortex_$1180",
                        "typeString": "contract Cortex"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1719,
                        "name": "Cortex",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1180,
                        "src": "2844:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cortex_$1180",
                          "typeString": "contract Cortex"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1721,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2844:16:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1722,
                      "name": "_synaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1703,
                      "src": "2923:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                      "id": 1723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2934:42:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x0000000000000000000000000000000000000000"
                    },
                    "src": "2923:53:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1786,
                    "nodeType": "Block",
                    "src": "3392:421:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1756,
                            "name": "newCortex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1720,
                            "src": "3454:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1759,
                                "name": "_CortexName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1697,
                                "src": "3494:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1760,
                                "name": "_tokenName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1699,
                                "src": "3523:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1761,
                                "name": "_tokenSym",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1701,
                                "src": "3551:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1762,
                                "name": "_synaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1703,
                                "src": "3578:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1763,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3603:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3603:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1765,
                                "name": "_isTransferable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1705,
                                "src": "3631:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1766,
                                "name": "_maxSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1707,
                                "src": "3664:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "3466:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_bool_$_t_uint256_$returns$_t_contract$_Cortex_$1180_$",
                                "typeString": "function (string memory,string memory,string memory,address,address,bool,uint256) returns (contract Cortex)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 1757,
                                "name": "Cortex",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 1180,
                                "src": "3470:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              }
                            },
                            "id": 1767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3466:222:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          },
                          "src": "3454:234:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cortex_$1180",
                            "typeString": "contract Cortex"
                          }
                        },
                        "id": 1769,
                        "nodeType": "ExpressionStatement",
                        "src": "3454:234:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1770,
                              "name": "cortexTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1625,
                              "src": "3702:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1772,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1771,
                              "name": "_CortexName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1697,
                              "src": "3716:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3702:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1775,
                                "name": "newCortex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1720,
                                "src": "3739:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              ],
                              "id": 1774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3731:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1773,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3731:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3731:18:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3702:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1778,
                        "nodeType": "ExpressionStatement",
                        "src": "3702:47:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1782,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3791:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3791:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1779,
                              "name": "newCortex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "3763:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Cortex_$1180",
                                "typeString": "contract Cortex"
                              }
                            },
                            "id": 1781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2048,
                            "src": "3763:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3763:39:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1785,
                        "nodeType": "ExpressionStatement",
                        "src": "3763:39:8"
                      }
                    ]
                  },
                  "id": 1787,
                  "nodeType": "IfStatement",
                  "src": "2919:894:8",
                  "trueBody": {
                    "id": 1755,
                    "nodeType": "Block",
                    "src": "2978:408:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1725,
                            "name": "newCortex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1720,
                            "src": "2992:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1728,
                                "name": "_CortexName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1697,
                                "src": "3032:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1729,
                                "name": "_tokenName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1699,
                                "src": "3061:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1730,
                                "name": "_tokenSym",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1701,
                                "src": "3089:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                                "id": 1731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3116:42:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                "value": "0x0000000000000000000000000000000000000000"
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1732,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3176:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3176:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1734,
                                "name": "_isTransferable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1705,
                                "src": "3204:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1735,
                                "name": "_maxSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1707,
                                "src": "3237:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "3004:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_bool_$_t_uint256_$returns$_t_contract$_Cortex_$1180_$",
                                "typeString": "function (string memory,string memory,string memory,address,address,bool,uint256) returns (contract Cortex)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 1726,
                                "name": "Cortex",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 1180,
                                "src": "3008:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              }
                            },
                            "id": 1736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3004:257:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          },
                          "src": "2992:269:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Cortex_$1180",
                            "typeString": "contract Cortex"
                          }
                        },
                        "id": 1738,
                        "nodeType": "ExpressionStatement",
                        "src": "2992:269:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1739,
                              "name": "cortexTracker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1625,
                              "src": "3275:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1741,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1740,
                              "name": "_CortexName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1697,
                              "src": "3289:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3275:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1744,
                                "name": "newCortex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1720,
                                "src": "3312:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Cortex_$1180",
                                  "typeString": "contract Cortex"
                                }
                              ],
                              "id": 1743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3304:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1742,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3304:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3304:18:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3275:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1747,
                        "nodeType": "ExpressionStatement",
                        "src": "3275:47:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1751,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3364:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3364:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1748,
                              "name": "newCortex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "3336:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Cortex_$1180",
                                "typeString": "contract Cortex"
                              }
                            },
                            "id": 1750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2048,
                            "src": "3336:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3336:39:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1754,
                        "nodeType": "ExpressionStatement",
                        "src": "3336:39:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1788,
                        "name": "nameTaken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "3823:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 1790,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1789,
                        "name": "_CortexName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1697,
                        "src": "3833:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3823:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3848:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3823:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "3823:29:8"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1797,
                            "name": "newCortex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1720,
                            "src": "3889:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cortex_$1180",
                              "typeString": "contract Cortex"
                            }
                          ],
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3881:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1795,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3881:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3881:18:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1799,
                        "name": "_CortexName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1697,
                        "src": "3901:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1794,
                      "name": "CortexCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1635,
                      "src": "3867:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 1800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3867:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1801,
                  "nodeType": "EmitStatement",
                  "src": "3862:51:8"
                }
              ]
            },
            "documentation": {
              "id": 1695,
              "nodeType": "StructuredDocumentation",
              "src": "1772:707:8",
              "text": "@notice createCortex is a public function that allows a user to create their own zDAO\n@dev this function can create a rep token for the new DAO OR use an existing ERC20 token\n@param _CortexName is the name of the DAO being created\n@param _tokenName is the name of the DAO's rep token(leave blank if using an existing token)\n@param _tokenSym is the symbol of the DAO's rep token(leave blank if using an existing token)\n@param _synaps is the address of an existing ERC20 token that can represent the DAO's rep\n(this would be set to 0x0 if not applicapble)\n@param _isTransferable is a bool representing whether or not the rep token is transferable*"
            },
            "functionSelector": "c50e154c",
            "id": 1803,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCortex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1697,
                  "mutability": "mutable",
                  "name": "_CortexName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2515:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1699,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2550:24:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1698,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1701,
                  "mutability": "mutable",
                  "name": "_tokenSym",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2584:23:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1700,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2584:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1703,
                  "mutability": "mutable",
                  "name": "_synaps",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2617:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2617:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1705,
                  "mutability": "mutable",
                  "name": "_isTransferable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2642:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1704,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1707,
                  "mutability": "mutable",
                  "name": "_maxSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1803,
                  "src": "2672:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2672:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2505:191:8"
            },
            "returnParameters": {
              "id": 1709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2704:0:8"
            },
            "scope": 1830,
            "src": "2484:1436:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1815,
              "nodeType": "Block",
              "src": "4269:44:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1811,
                      "name": "cortexTracker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1625,
                      "src": "4286:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 1813,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1812,
                      "name": "_Name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1806,
                      "src": "4300:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4286:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1810,
                  "id": 1814,
                  "nodeType": "Return",
                  "src": "4279:27:8"
                }
              ]
            },
            "documentation": {
              "id": 1804,
              "nodeType": "StructuredDocumentation",
              "src": "3926:263:8",
              "text": "@notice retrieveCortex is used to retrieve a Cortex's address by its name\n@dev this is a view only function for front end use\n@param _Name is the name of the Cortex who's address is being retrieved\n@return the address of the Cortex*"
            },
            "functionSelector": "a26d91df",
            "id": 1816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveCortex",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1806,
                  "mutability": "mutable",
                  "name": "_Name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1816,
                  "src": "4218:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1805,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4218:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4217:21:8"
            },
            "returnParameters": {
              "id": 1810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1809,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1816,
                  "src": "4260:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4260:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4259:9:8"
            },
            "scope": 1830,
            "src": "4194:119:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1828,
              "nodeType": "Block",
              "src": "4696:40:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1824,
                      "name": "nameTaken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1629,
                      "src": "4713:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 1826,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1825,
                      "name": "_Name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1819,
                      "src": "4723:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4713:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1823,
                  "id": 1827,
                  "nodeType": "Return",
                  "src": "4706:23:8"
                }
              ]
            },
            "documentation": {
              "id": 1817,
              "nodeType": "StructuredDocumentation",
              "src": "4319:299:8",
              "text": "@notice cortexNameTaken is used to determine if a name for a Cortex is currently in use\n@dev this is a view only function for front end use\n@param _Name is the proposed name of a Cortex\n@return a bool(true/false) for whether or not a Cortex with the input name exists*"
            },
            "functionSelector": "d0a087c8",
            "id": 1829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cortexNameTaken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1819,
                  "mutability": "mutable",
                  "name": "_Name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1829,
                  "src": "4648:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1818,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4648:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4647:21:8"
            },
            "returnParameters": {
              "id": 1823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1822,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1829,
                  "src": "4690:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1821,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4690:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4689:6:8"
            },
            "scope": 1830,
            "src": "4623:113:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1831,
        "src": "494:4246:8"
      }
    ],
    "src": "0:4741:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "1611185986573": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x43739a99C49e83b8E63711188ce73a12B99F8412",
      "transactionHash": "0x3a52cb7da7776e5b20d1d5114f4dbdfd3d21864ea2db73d368ee4313fa9c6ba3"
    },
    "1612461884746": {
      "events": {
        "0x6361531792c6d1906d164766ab4d654d52625a08c50ff690efa5935b8de2d059": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_cortexAdd",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_cotexName",
              "type": "string"
            }
          ],
          "name": "CortexCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1E39db22dc249F4B75DDF2F1422bdff75b21A28e",
      "transactionHash": "0xe224228b941bd340871cc081713ab8c91d444a8836ce4eb6a6140cfa8e4335cc"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-02-04T18:29:29.889Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "_neuroGensis(address,string)": {
        "params": {
          "_Cortex": "is the address of the cortex who is generating a neuron",
          "_neuronName": "is the name of the neuron being generated*"
        }
      },
      "addCoreNueron(string,address)": {
        "params": {
          "_NeuronName": "is the name of the neuron being added",
          "_neuronFactoryAddress": "is the factory address for the neuron being added*"
        }
      },
      "addPeripheralNueron(string,address)": {
        "params": {
          "_NeuronName": "is the name of the neuron being added",
          "_neuronFactoryAddress": "is the factory address for the neuron being added*"
        }
      },
      "constructor": {
        "params": {
          "_NeuronNames": "is an array of all availible core neuron names availible at deployment time",
          "_initialCoreNeurons": "is an array of all availible core neuron addresses availible at deployment time*"
        }
      },
      "cortexNameTaken(string)": {
        "details": "this is a view only function for front end use",
        "params": {
          "_Name": "is the proposed name of a Cortex"
        },
        "returns": {
          "_0": "a bool(true/false) for whether or not a Cortex with the input name exists*"
        }
      },
      "createCortex(string,string,string,address,bool,uint256)": {
        "details": "this function can create a rep token for the new DAO OR use an existing ERC20 token",
        "params": {
          "_CortexName": "is the name of the DAO being created",
          "_isTransferable": "is a bool representing whether or not the rep token is transferable*",
          "_synaps": "is the address of an existing ERC20 token that can represent the DAO's rep (this would be set to 0x0 if not applicapble)",
          "_tokenName": "is the name of the DAO's rep token(leave blank if using an existing token)",
          "_tokenSym": "is the symbol of the DAO's rep token(leave blank if using an existing token)"
        }
      },
      "createSynaps(string,string,bool,bool,address,uint256)": {
        "params": {
          "_Creator": "is the address of the person who created the synaps token.",
          "_maxSupply": "is the maximum supply this synaps will be capped at(uncapped == 0)*",
          "_tokenName": "is the name of the token",
          "_tokenSym": "is the symbol of the token"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "retrieveCortex(string)": {
        "details": "this is a view only function for front end use",
        "params": {
          "_Name": "is the name of the Cortex who's address is being retrieved"
        },
        "returns": {
          "_0": "the address of the Cortex*"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "_neuroGensis(address,string)": {
        "notice": "_neuroGensis is used by a cortex to generate a new neural instance of a neuron"
      },
      "addCoreNueron(string,address)": {
        "notice": "addCoreNueron allows the owner of this contract to add a core neuron to the matrix"
      },
      "addPeripheralNueron(string,address)": {
        "notice": "addPeripheralNueron allows the owner of this contract to add a peripheral neuron to the matrix"
      },
      "constructor": "the constructor is fired only once during contract creation and is used to set up variables in the contract",
      "cortexNameTaken(string)": {
        "notice": "cortexNameTaken is used to determine if a name for a Cortex is currently in use"
      },
      "createCortex(string,string,string,address,bool,uint256)": {
        "notice": "createCortex is a public function that allows a user to create their own zDAO"
      },
      "createSynaps(string,string,bool,bool,address,uint256)": {
        "notice": "the createSynaps function allows a user to create their own synaps token"
      },
      "retrieveCortex(string)": {
        "notice": "retrieveCortex is used to retrieve a Cortex's address by its name"
      }
    },
    "notice": "The Matrix contract is designed to produce and track individual ZDAO contracts*"
  }
}